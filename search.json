[{"path":"https://jprybylski.github.io/xpose.xtras/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 xpose.xtras authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/articles/a01-the-xp_xtra-object.html","id":"how-to-get-the-object","dir":"Articles","previous_headings":"","what":"How to get the object","title":"The extended xpose data object","text":"xpose_data object (aka: xpdb) gets extensions package. Many added accommodate new plots features, cases features cross-compatible typical xpose_data object well. extended version xpose_data class xp_xtra, also referred xpdb_x. Conversion xpose_data object simple. shown, minor changes output print() help confirm object extended version. However, implemented merely S3 class, xpose functions continue work new object; current package also written way work even xp_xtra object loses class. Notably, convenience function read model output directly xp_xtra object, objects labelled xp_xtra start xpose_data. Many example xp_xtra objects included package, covering variety special cases.","code":"xpdb_converted <- xpdb_ex_pk %>%   as_xpdb_x()  # To verify: xpdb_ex_pk #> run001.lst overview:  #>  - Software: nonmem 7.3.0  #>  - Attached files (memory usage 1.4 Mb):  #>    + obs tabs: $prob no.1: catab001.csv, cotab001, patab001, sdtab001  #>    + sim tabs: $prob no.2: simtab001.zip  #>    + output files: run001.cor, run001.cov, run001.ext, run001.grd, run001.phi, run001.shk  #>    + special: <none>  #>  - gg_theme: theme_readable  #>  - xp_theme: theme_xp_default  #>  - Options: dir = data, quiet = FALSE, manual_import = NULL xpdb_converted #>  #> ── ~ xp_xtras object  #> Model description: NONMEM PK example for xpose #> run001.lst overview:  #>  - Software: nonmem 7.3.0  #>  - Attached files (memory usage 1.4 Mb):  #>    + obs tabs: $prob no.1: catab001.csv, cotab001, patab001, sdtab001  #>    + sim tabs: $prob no.2: simtab001.zip  #>    + output files: run001.cor, run001.cov, run001.ext, run001.grd, run001.phi, run001.shk  #>    + special: <none>  #>  - gg_theme: theme_readable  #>  - xp_theme: xp_xtra_theme new_x$xp_theme  #>  - Options: dir = data, quiet = FALSE, manual_import = NULL, cvtype = exact"},{"path":[]},{"path":"https://jprybylski.github.io/xpose.xtras/articles/a01-the-xp_xtra-object.html","id":"tidying-up","dir":"Articles","previous_headings":"What features are available?","what":"Tidying up","title":"The extended xpose data object","text":"design xpose attempts align well tidyverse family R packages, one focus extension package make alignment bit consistent. example, xpose::set_var_types accepts character vectors column names, tidyselection. , columns named consistent tidyselect-friendly way used advantage. minimal example can seen , course complex situations convenient. Tidyselection used fairly heavily xpose.xtras package seems intuitive include . likely functions use currently. , documentation attempt distinguish tidyselect expected.","code":"# Unset all example covariates xpdb_ex_covs <- xp_var(xpdb_ex_pk, type = c(\"catcov\",\"contcov\"), .problem=1) %>%    pull(col) xpdb_ex_covs #> [1] \"MED1\" \"MED2\" \"SEX\"  \"AGE\"  \"CLCR\" \"WT\" no_covs <- set_var_types(xpdb_ex_pk, .problem=1, na = xpdb_ex_covs)  # set_var_types on xpose_data objects uses xpose::set_var_types set_var_types(no_covs, .problem=1, catcov = c(\"MED1\",\"MED2\")) %>%   xp_var(type = c(\"catcov\",\"contcov\"), .problem=1) %>%    pull(col) #> [1] \"MED1\" \"MED2\" no_covs %>%   as_xpdb_x() %>%   set_var_types(catcov = starts_with(\"MED\"), .problem=1) %>%   xp_var(type = c(\"catcov\",\"contcov\"), .problem=1) %>%    pull(col) #> [1] \"MED1\" \"MED2\""},{"path":"https://jprybylski.github.io/xpose.xtras/articles/a01-the-xp_xtra-object.html","id":"labels-units-and-also-levels","dir":"Articles","previous_headings":"What features are available?","what":"Labels, units and (also) levels","title":"The extended xpose data object","text":"Another feature includes visual confirmations variable units, labels (new package) levels. xpose, users able add units labels variable, stored object theoretically used somewhere. package attempts use communication features liberally plots user, broader implementation (require changes existing xpose functions) complete just yet. labels units, applied using conventional xpose functions. However, unlike xpose, can confirmed using list_vars() xpose.xtras. Levels can also added variable, can especially useful categorical covariates (catcov) categorical DVs (type catdv, added package). documentation set_var_levels() can referenced information , example shows feature can used checked. Labels, units levels also appear new plotting functions. complex functions renaming implemented, plan universal eventually.   Note categorical plots, number individuals represented category underneath value. similar presentation package pmplots, uses existing xpose framework. option requires use xp_xtra object, can disabled argument show_n=FALSE.","code":"w_unit_labs <- xpdb_x %>%   set_var_labels(AGE=\"Age\", MED1 = \"Digoxin\", .problem = 1) %>%   set_var_units(AGE=\"yrs\") list_vars(w_unit_labs, .problem = 1) #> List of available variables for problem no. 1 #>  - Subject identifier (id)               : ID #>  - Dependent variable (dv)               : DV #>  - Independent variable (idv)            : TIME #>  - Dose amount (amt)                     : AMT #>  - Event identifier (evid)               : EVID #>  - Model typical predictions (pred)      : PRED #>  - Model individual predictions (ipred)  : IPRED #>  - Model parameter (param)               : KA, CL, V, ALAG1 #>  - Eta (eta)                             : ETA1, ETA2, ETA3 #>  - Residuals (res)                       : CWRES, IWRES, RES, WRES #>  - Categorical covariates (catcov)       : SEX [0], MED1 ('Digoxin') [0], MED2 [0] #>  - Continuous covariates (contcov)       : CLCR, AGE ('Age', yrs), WT #>  - Compartment amounts (a)               : A1, A2 #>  - Not attributed (na)                   : DOSE, SS, II, TAD, CPRED w_levels <- w_unit_labs  %>%   set_var_levels(SEX=lvl_sex(), MED1 = lvl_bin()) list_vars(w_levels, .problem = 1) #> List of available variables for problem no. 1 #>  - Subject identifier (id)               : ID #>  - Dependent variable (dv)               : DV #>  - Independent variable (idv)            : TIME #>  - Dose amount (amt)                     : AMT #>  - Event identifier (evid)               : EVID #>  - Model typical predictions (pred)      : PRED #>  - Model individual predictions (ipred)  : IPRED #>  - Model parameter (param)               : KA, CL, V, ALAG1 #>  - Eta (eta)                             : ETA1, ETA2, ETA3 #>  - Residuals (res)                       : CWRES, IWRES, RES, WRES #>  - Categorical covariates (catcov)       : SEX [2], MED1 ('Digoxin') [2], MED2 [0] #>  - Continuous covariates (contcov)       : CLCR, AGE ('Age', yrs), WT #>  - Compartment amounts (a)               : A1, A2 #>  - Not attributed (na)                   : DOSE, SS, II, TAD, CPRED eta_vs_contcov(w_unit_labs,etavar=ETA1, quiet=TRUE) #> `geom_smooth()` using formula = 'y ~ x' #> `geom_smooth()` using formula = 'y ~ x' eta_vs_catcov(w_levels,etavar=ETA1, quiet=TRUE)"},{"path":"https://jprybylski.github.io/xpose.xtras/articles/a01-the-xp_xtra-object.html","id":"parameter-tables","dir":"Articles","previous_headings":"What features are available?","what":"Parameter tables","title":"The extended xpose data object","text":"get_prm() function xpose extended output coefficient variation percent (CV%) ω2\\omega^2 parameters shrinkages relevant. options change CV% opinion might conflict default. One option add description parameter used, results exact CV% determined integration used. example, variability weight-normalized clearance volume distribution parameters one example models logit-normally distributed, described follows. fair amount complexity get_prm() extensions, including ability change parameter value also changing standard error relevant variance-covariance (position .cov .cor files). See ?add_prm_association ?mutate_prm.","code":"get_prm(pheno_final) %>%   select(-c(fixed,m,n)) #> Returning parameter estimates from $prob no.1, subprob no.1, method foce #> # A tibble: 7 × 9 #>   type  name       label       value         se      rse diagonal      cv    shk #>   <chr> <chr>      <chr>     <num:4>    <num:4>  <num:4> <lgl>    <num:4> <num:> #> 1 the   THETA1     \"CLpkg\"  0.004813  0.0002365  0.04914 NA         NA      NA   #> 2 the   THETA2     \"Vpkg\"   0.9964    0.02642    0.02652 NA         NA      NA   #> 3 the   THETA3     \"RUVADD\" 2.784     0.2513     0.09027 NA         NA      NA   #> 4 ome   OMEGA(1,1) \"IIVCL\"  0.2009    0.05108    0.2543  TRUE       20.30   20.1 #> 5 ome   OMEGA(2,1) \"\"       0.7236    0.2654     0.3668  FALSE      NA      NA   #> 6 ome   OMEGA(2,2) \"IIVV\"   0.1576    0.02614    0.1659  TRUE       15.86   11.6 #> 7 sig   SIGMA(1,1) \"\"       1        NA         NA       TRUE       NA      19.6 pheno_final %>%    add_prm_association(CLpkg~logit(IIVCL),Vpkg~logit(IIVV)) %>%    get_prm() %>%   select(-c(fixed,m,n)) #> Returning parameter estimates from $prob no.1, subprob no.1, method foce #> # A tibble: 7 × 9 #>   type  name       label       value         se      rse diagonal       cv   shk #>   <chr> <chr>      <chr>     <num:4>    <num:4>  <num:4> <lgl>     <num:4> <num> #> 1 the   THETA1     \"CLpkg\"  0.004813  0.0002365  0.04914 NA       NA        NA   #> 2 the   THETA2     \"Vpkg\"   0.9964    0.02642    0.02652 NA       NA        NA   #> 3 the   THETA3     \"RUVADD\" 2.784     0.2513     0.09027 NA       NA        NA   #> 4 ome   OMEGA(1,1) \"IIVCL\"  0.2009    0.05108    0.2543  TRUE     20.19     20.1 #> 5 ome   OMEGA(2,1) \"\"       0.7236    0.2654     0.3668  FALSE    NA        NA   #> 6 ome   OMEGA(2,2) \"IIVV\"   0.1576    0.02614    0.1659  TRUE      0.05778  11.6 #> 7 sig   SIGMA(1,1) \"\"       1        NA         NA       TRUE     NA        19.6 #> # Parameter table includes the following associations: CLpkg~logit(IIVCL) and #> Vpkg~logit(IIVV)"},{"path":"https://jprybylski.github.io/xpose.xtras/articles/a01-the-xp_xtra-object.html","id":"cross-compatibility","dir":"Articles","previous_headings":"","what":"Cross-compatibility","title":"The extended xpose data object","text":"various warning messages, xp_xtras object referred “cross-compatible”. word choice intended highlight many functions developed xp_xtras objects still work (perhaps diminished functionality) xpose_data objects, inverse course true. Another way cross-compatibility maintained via custom themes. may xpose users concerned adopting xpose.xtras new plot elements declare new aesthetic defaults. Conveniently, xp_xtra theme derived way aesthetics defined plot elements re-used similar new elements, meaning less () updates needed use custom theme beyond using something like following.   Note worked even though boxplot_fill defined xpose::theme_xp_xpose4(). update existing theme object one extension package (instead using old theme xp_theme argument), simply use updated_theme <- xp_xtra_theme(old_theme).","code":"favorite_theme <- xpose::theme_xp_xpose4() # stand-in for \"custom\" theme  eta_vs_catcov(w_levels,etavar=ETA1, quiet=TRUE) eta_vs_catcov(w_levels,etavar=ETA1, quiet=TRUE, xp_theme = favorite_theme)"},{"path":"https://jprybylski.github.io/xpose.xtras/articles/a01-the-xp_xtra-object.html","id":"convenience","dir":"Articles","previous_headings":"","what":"Convenience","title":"The extended xpose data object","text":"xpose collection getter setter functions interact parts xpose_data object, tend lower level exported. add convenience make user-friendly, functions added. Properties model summary can now pulled without using xpose::get_summary(). xpose certain expectations around model descriptions included model code. time writing, expected format something like “; 2. Description: (text)”. add flexibility, users can either use set_prop() change description directly, pull generic scan model code comments using desc_from_comments(). can helpful add information model data available elsewhere xpose_data object, individual objective functions. Currently, can added using backfill_iofv(), often used context xpose_set objects. Theoretically backfill functions can made available.","code":"pheno_final %>% get_shk() #> [1] 20.1 11.6 pheno_final %>% get_shk(\"eps\") #> [1] 19.6 pheno_final %>% get_prop(\"ofv\") #> [1] \"587.918\" pheno_final %>% get_prop(\"descr\") #> [1] \"na\" pheno_final %>% desc_from_comments() %>% get_prop(\"descr\") #> [1] \"Reparameterized final model\""},{"path":"https://jprybylski.github.io/xpose.xtras/articles/a02-xpose-sets.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Using xpose sets","text":"powerful new object building upon xpose framework xpose_set. Much like xpose_data essence list information data fitted model, xpose_set list xpose_data (xp_xtras) objects information models relate one another. Creating set easy. important point remember usage set item must label. Depending set created, default use name xpose_data object, unnamed list spliced objects share label, error occur. Note, however, duplicate xpose_data objects can used, long different labels. xpose_set() example , three example models fitting dataset made set, alternative labels used one version set. print output hints features explored vignette. example sets package can used test elements discussed . relatively complex example explores typical model-building steps common phenobarbital neonates dataset, called pheno_set, diagrammed .","code":"xpose_set(pheno_base, pheno_final, pheno_saem) #>  #> ── xpose_set object ──────────────────────────────────────────────────────────── #> • Number of models: 3 #> • Model labels: pheno_base, pheno_final, and pheno_saem #> • Number of relationships: 0 #> • Focused xpdb objects: none #> • Exposed properties: none #> • Base model: none xpose_set(base=pheno_base, reparam=pheno_final, reparam_saem=pheno_saem) #>  #> ── xpose_set object ──────────────────────────────────────────────────────────── #> • Number of models: 3 #> • Model labels: base, reparam, and reparam_saem #> • Number of relationships: 0 #> • Focused xpdb objects: none #> • Exposed properties: none #> • Base model: none diagram_lineage(pheno_set) %>%   DiagrammeR::render_graph(layout=\"tree\")"},{"path":"https://jprybylski.github.io/xpose.xtras/articles/a02-xpose-sets.html","id":"relationships","dir":"Articles","previous_headings":"","what":"Relationships","title":"Using xpose sets","text":"Relationships models set can declared formula notation, one child models dependent one parents (child1+... ~ parent1+...). demonstrate, parts pheno_set can reproduced. Trees can also concatenated, using typical R/tidyverse syntax. documentation ?add_relationship contains information declaring removing relationships. Users aware model lineage actually used functions process xpose_set objects generate output, declaring parentage done valid. mean necessarily child nested parent(s), lineage considered relevant functions compare models.","code":"phrun3 <- pheno_set$run3$xpdb phrun5 <- pheno_set$run5$xpdb phrun6 <- pheno_set$run6$xpdb phrun7 <- pheno_set$run7$xpdb phrun8 <- pheno_set$run8$xpdb phrun9 <- pheno_set$run9$xpdb pheno_stem <- xpose_set(phrun3,phrun5,phrun6, .as_ordered = TRUE) pheno_stem #>  #> ── xpose_set object ──────────────────────────────────────────────────────────── #> • Number of models: 3 #> • Model labels: phrun3, phrun5, and phrun6 #> • Number of relationships: 2 #> • Focused xpdb objects: none #> • Exposed properties: none #> • Base model: none diagram_lineage(pheno_stem) %>%   DiagrammeR::render_graph(layout=\"tree\") pheno_branch <- xpose_set(phrun6,phrun7,phrun8,phrun9, .relationships = c(phrun7+phrun8+phrun9~phrun6)) pheno_branch #>  #> ── xpose_set object ──────────────────────────────────────────────────────────── #> • Number of models: 4 #> • Model labels: phrun6, phrun7, phrun8, and phrun9 #> • Number of relationships: 3 #> • Focused xpdb objects: none #> • Exposed properties: none #> • Base model: none diagram_lineage(pheno_branch) %>%   DiagrammeR::render_graph(layout=\"tree\") pheno_tree <- pheno_stem %>%    # drop phrun6 from stem   select(-phrun6) %>%   c(     pheno_branch,     .relationships = c(phrun6~phrun5)   ) pheno_tree #>  #> ── xpose_set object ──────────────────────────────────────────────────────────── #> • Number of models: 6 #> • Model labels (truncated): phrun3, phrun5, phrun6, phrun7, and phrun8 (...) #> • Number of relationships: 5 #> • Focused xpdb objects: none #> • Exposed properties: none #> • Base model: none #> # ℹ 1 more xpdbs #> # ℹ Use `print(n = ...)` to see more than n = 5 diagram_lineage(pheno_tree) %>%   DiagrammeR::render_graph(layout=\"tree\")"},{"path":"https://jprybylski.github.io/xpose.xtras/articles/a02-xpose-sets.html","id":"comparing-models-in-sets","dir":"Articles","previous_headings":"","what":"Comparing models in sets","title":"Using xpose sets","text":"Models set can compared functions plots. functions comparison include diff() method. method limits comparison longest lineage provided set, starting base model one declared. models included can examined probing xset_lineage() function. xset_lineage() diff() can also generate lists multiple models passed ..., treats base models. Models can also compared various plots. Many use individual objective function values (iOFVs) require values xpdb data. missing xpose_data object generated based NONMEM run, can added backfill_iofv() function. discuss focusing another section, useful , Two models can compared one way using updated version xpose4 function; referred places “shark plot”, called xpose4::dOFV.vs.id() xpose4. , called shark_plot() dofv_vs_id() xpose.xtras.  also functions use xpose_set model-averaging ways visually explore impact model changes individual fits documented within package. Many considered experimental, facilitate improvements.","code":"diff(pheno_set) #> [1] -148.723  -37.080  -60.163  -43.281   35.133 tbl_diff <- function(set) tibble(   models = xset_lineage(set),   diff = c(0,diff(set)) ) tbl_diff(pheno_set) #> # A tibble: 6 × 2 #>   models   diff #>   <chr>   <dbl> #> 1 run3      0   #> 2 run5   -149.  #> 3 run6    -37.1 #> 4 run9    -60.2 #> 5 run14   -43.3 #> 6 run15    35.1 pheno_set %>%   remove_relationship(run9~run6) %>%   tbl_diff() #> # A tibble: 5 × 2 #>   models      diff #>   <chr>      <dbl> #> 1 run3      0      #> 2 run5   -149.     #> 3 run6    -37.1    #> 4 run10    -0.0230 #> 5 run12    -0.181 pheno_set %>%   set_base_model(run6) %>%   tbl_diff() #> # A tibble: 4 × 2 #>   models  diff #>   <chr>  <dbl> #> 1 run6     0   #> 2 run9   -60.2 #> 3 run14  -43.3 #> 4 run15   35.1 tibble(   models = xset_lineage(pheno_set,run6),   diff = c(0,diff(pheno_set,run6)) ) #> # A tibble: 4 × 2 #>   models  diff #>   <chr>  <dbl> #> 1 run6     0   #> 2 run9   -60.2 #> 3 run14  -43.3 #> 4 run15   35.1 diff(pheno_set, run10,run9) #> $run10 #> [1] -0.181 #>  #> $run9 #> [1] -43.281  35.133 xset_lineage(pheno_set, run10,run9) #> $run10 #> [1] \"run10\" \"run12\" #>  #> $run9 #> [1] \"run9\"  \"run14\" \"run15\" pheno_set %>%   focus_qapply(backfill_iofv) %>%   shark_plot(run6, run9, quiet = TRUE)"},{"path":"https://jprybylski.github.io/xpose.xtras/articles/a02-xpose-sets.html","id":"manipulating-a-set","dir":"Articles","previous_headings":"","what":"Manipulating a set","title":"Using xpose sets","text":"already explored ways manipulate set. manipulations distinctly designed user can change overall set xpose_data elements within set using fairly intuitive functionality. Information xpose_data summary parameter values can “exposed”, means become associated set item top level. view table, function reshape_set() can used. Note exposed data denoted prefix .. (two dots) column names. methods popular dplyr verbs attempt produce expected results despite underlying structure xpose_set tabular. verbs also defined xpose_data objects, may desired “forward” function xpose_data objects set instead applying set object. functionality available focusing. Focused elements set automatically forward functions xpose_data objects element, nothing unfocused elements. function can passed focused xpose_data objects focus_function(). shortcut focusing everything, applying function unfocusing everything available form focus_qapply().","code":"pheno_set %>%   expose_property(ofv) %>%   expose_param(ome1) %>%   reshape_set() %>%   head() #> # A tibble: 6 × 7 #>   xpdb         label parent       base  focus ..ofv ..ome1 #>   <named list> <chr> <named list> <lgl> <lgl> <dbl>  <dbl> #> 1 <xp_xtras>   run3  <chr [1]>    FALSE FALSE  874.  1.69  #> 2 <xp_xtras>   run4  <chr [1]>    FALSE FALSE  834.  0.608 #> 3 <xp_xtras>   run5  <chr [1]>    FALSE FALSE  726.  0.198 #> 4 <xp_xtras>   run6  <chr [1]>    FALSE FALSE  689.  0.239 #> 5 <xp_xtras>   run10 <chr [1]>    FALSE FALSE  688.  0.243 #> 6 <xp_xtras>   run12 <chr [1]>    FALSE FALSE  688.  0.232 pheno_set %>%   select(run3,run15) %>%   names() #> [1] \"run3\"  \"run15\" pheno_set %>%   # Note renaming can affect parentage.   # For simplicity, this method does not change    # parent automatically in child   rename(NewName = run3) %>%   names() #>  [1] \"NewName\" \"run4\"    \"run5\"    \"run6\"    \"run10\"   \"run12\"   \"run11\"   #>  [8] \"run13\"   \"run7\"    \"run8\"    \"run9\"    \"run14\"   \"run15\"   \"run16\" pheno_set %>%   expose_property(ofv) %>%   filter(..ofv < 700) %>%   names() #>  [1] \"run6\"  \"run10\" \"run12\" \"run11\" \"run13\" \"run7\"  \"run8\"  \"run9\"  \"run14\" #> [10] \"run15\" \"run16\" pheno_set %>%   expose_param(ome1) %>%   pull(..ome1) #>  [1] 1.69000 0.60800 0.19800 0.23900 0.24270 0.23200 0.23700 0.22800 0.25400 #> [10] 0.03432 0.17600 0.03870 0.03470 0.04037 focus_test <- pheno_set %>%   focus_xpdb(run3,run15) %>%   mutate(test_col = 1) %>%   unfocus_xpdb() tail(names(get_data(focus_test$run6$xpdb, quiet=TRUE))) #> [1] \"CWRES\" \"NPDE\"  \"DV\"    \"PRED\"  \"RES\"   \"WRES\" tail(names(get_data(focus_test$run3$xpdb, quiet=TRUE))) #> [1] \"NPDE\"     \"DV\"       \"PRED\"     \"RES\"      \"WRES\"     \"test_col\""},{"path":"https://jprybylski.github.io/xpose.xtras/articles/a03-useful_plots.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Useful uncommon plots","text":"xpose.xtras package attempts bring old favorites back xpose framework predecessor xpose4, named allow easy access documentation. vignette brings focus visualizations package unlikely used projects, still helpful needed. underlying tools built functions also powerful supportive greater extension xpose framework.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/articles/a03-useful_plots.html","id":"model-averaged-plots","dir":"Articles","previous_headings":"","what":"Model-averaged plots","title":"Useful uncommon plots","text":"Model-averaging can useful two models can describe different aspects data pharmacology, various reasons mixture model population approach inadequate. can also helpful multiple models developed various populations new population fit necessarily consist entirely previously fitted population. package facilitates generation model-averaged diagnostics. approach rudimentary experimental, merely creating averaged version xpose_data object xpose_set. referenced documentation, Model Selection Model Averaged Algorithms used Uster et al. implemented averaging (?modavg_xpdb). algorithms require individual objective functions, argument automatically apply backfill_iofv().  default title, subtitle caption experimental figures rough, especially large sets. Changes better appearance expected future.","code":"pheno_set %>%   ipred_vs_idv_modavg(auto_backfill = TRUE, quiet=TRUE) #> `geom_smooth()` using formula = 'y ~ x' #> `geom_smooth()` using formula = 'y ~ x'"},{"path":"https://jprybylski.github.io/xpose.xtras/articles/a03-useful_plots.html","id":"categorical-dependent-variables","dir":"Articles","previous_headings":"","what":"Categorical dependent variables","title":"Useful uncommon plots","text":"Categorical DVs frequently modeled variety methods used visually diagnose modeled endpoints, typically model-specific. Along adding generic support categorical DVs, xpose.xtras also adds plots diagnose models developed . use diagnostics, model categorical DV needs column DV stated (“DV” needs ripped away dv variable type), column predicting likelihood probability DV certain value. example using M3 model documentation.  expected somewhat sigmoidal least - right-ward relationship two sets observations adequate model, diagnostics interpretation plot subjective extent. plots categorical DVs two sets data. untested happen observations fell one category, unlikely produce good model. relevant catdv functions can still used models multiple levels, vismodegib muscle spasm model (Lu et al.) built examples. models, plot essentially dichotomizing probability one observation compared probability observation,    None examples can used demonstrate easily, plots can also model-averaged using generic plotfun_modavg() function.","code":"pkpd_m3 %>%   # Need to ensure var types are set   set_var_types(catdv=BLQ,dvprobs=LIKE) %>%   # Set probs (\"LIKE is the probability tht BLQ is 1\")   set_dv_probs(1, 1~LIKE, .dv_var = BLQ) %>%   # Optional, but useful to set levels   set_var_levels(1, BLQ = lvl_bin()) %>%   catdv_vs_dvprobs(quiet=TRUE) #> `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")' #> `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")' vismo_xpdb <- vismo_pomod  %>%   set_var_types(.problem=1, catdv=DV, dvprobs=matches(\"^P\\\\d+$\")) %>%   set_dv_probs(.problem=1, 0~P0,1~P1,ge(2)~P23) vismo_xpdb %>%   catdv_vs_dvprobs(quiet=TRUE) #> `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")' #> `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")' vismo_xpdb %>%   catdv_vs_dvprobs(cutpoint = 2, quiet=TRUE) #> `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")' #> `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")' vismo_xpdb %>%   catdv_vs_dvprobs(cutpoint = 3, quiet=TRUE) #> `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")' #> `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'"},{"path":"https://jprybylski.github.io/xpose.xtras/articles/a03-useful_plots.html","id":"waterfall-and-objective-function-trends","dir":"Articles","previous_headings":"","what":"Waterfall and objective function trends","title":"Useful uncommon plots","text":"common needs xpose_set include model-building tables, covariate testing visualization. However, occasions visual description can shown tables can useful. default waterfall plot compares scales change parameter values, intended make relative comparisons focus. especially beneficial comparing changes empirical Bayes estimates (EBEs).  Waterfalls can also used alternative shark plots. Scaling case default.  track iOFV changes multiple models, another plot can used.","code":"pheno_set %>%   eta_waterfall(run3,run6, quiet=TRUE) pheno_set %>%   focus_qapply(backfill_iofv) %>%   iofv_waterfall(run3,run6, quiet=TRUE) iofv_vs_mod(pheno_set, auto_backfill = TRUE, quiet=TRUE)"},{"path":"https://jprybylski.github.io/xpose.xtras/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"John Prybylski. Author, maintainer.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Prybylski J (2024). xpose.xtras: Extra Functionality Xpose Package. R package version 0.0.2, https://github.com/jprybylski/xpose.xtras, https://jprybylski.github.io/xpose.xtras/.","code":"@Manual{,   title = {xpose.xtras: Extra Functionality for the Xpose Package},   author = {John Prybylski},   year = {2024},   note = {R package version 0.0.2, https://github.com/jprybylski/xpose.xtras},   url = {https://jprybylski.github.io/xpose.xtras/}, }"},{"path":[]},{"path":"https://jprybylski.github.io/xpose.xtras/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Extra Functionality for the Xpose Package","text":"package adds extra functionality plots xpose framework. includes plots missing translation xpose4, also useful features truly extend capabilities can done xpose. bugfixes functionality easily suggested pull requests parent package. Given size broad use xpose, appears even minor pull requests take time implement. , package implements features directly point future added (perhaps better state) parent package, deprecated package active use. wondering, conflicted used manage bugfix conflicts, users comfortable loading packages order.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Extra Functionality for the Xpose Package","text":"package currently available , submission CRAN planned soon. typical github installation work.","code":"devtools::install_github(\"jprybylski/xpose.xtras\")"},{"path":"https://jprybylski.github.io/xpose.xtras/index.html","id":"preview","dir":"","previous_headings":"","what":"Preview","title":"Extra Functionality for the Xpose Package","text":"grandparent package, xpose4, nice collection figures documentation referred “bestiary”. documentation site package serves complete bestiary, see uncommented examples sort menagerie. assumption examples self-explanatory, hopefully users familiar xpose recognize new (renewed) tools made available package.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/index.html","id":"ebes-versus-covariates","dir":"","previous_headings":"Preview","what":"EBEs versus covariates","title":"Extra Functionality for the Xpose Package","text":"","code":"described <- xpdb_x %>%   set_var_labels(AGE=\"Age\", MED1 = \"Digoxin\", .problem = 1) %>%   set_var_units(AGE=\"yrs\")  %>%   set_var_levels(SEX=lvl_sex(), MED1 = lvl_bin()) eta_vs_contcov(described,etavar=ETA1, quiet=TRUE) #> `geom_smooth()` using formula = 'y ~ x' #> `geom_smooth()` using formula = 'y ~ x' eta_vs_catcov(described,etavar=ETA1, quiet=TRUE)"},{"path":"https://jprybylski.github.io/xpose.xtras/index.html","id":"shark-plots","dir":"","previous_headings":"Preview","what":"Shark plots","title":"Extra Functionality for the Xpose Package","text":"","code":"pheno_set %>%   focus_qapply(backfill_iofv) %>%   dofv_vs_id(run6, run9, quiet = TRUE)"},{"path":"https://jprybylski.github.io/xpose.xtras/index.html","id":"categorical-dvs","dir":"","previous_headings":"Preview","what":"Categorical DVs","title":"Extra Functionality for the Xpose Package","text":"","code":"pkpd_m3 %>%   set_var_types(catdv=BLQ,dvprobs=LIKE) %>%   set_dv_probs(1, 1~LIKE, .dv_var = BLQ) %>%   set_var_levels(1, BLQ = lvl_bin()) %>%   catdv_vs_dvprobs(quiet=TRUE) #> `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")' #> `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/add_prm_association.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe parameter associations — add_prm_association","title":"Describe parameter associations — add_prm_association","text":"relationship structural parameters omega parameters can described. useful deviates typical log-normal. Default transformations built pmxcv, see examples associations can described relationships.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/add_prm_association.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe parameter associations — add_prm_association","text":"","code":"add_prm_association(xpdb, ..., .problem, .subprob, .method, quiet)  drop_prm_association(xpdb, ..., .problem, .subprob, .method, quiet)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/add_prm_association.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe parameter associations — add_prm_association","text":"xpdb <xp_xtras> object ... ... <dynamic-dots> One formulas define associations parameters. One list formulas can also used, warning generated. drop_prm_association, dots selectors associations dropped (the2, the3,...). Fixed effect selectors work. .problem <numeric> Problem number apply relationship. .subprob <numeric> Problem number apply relationship. .method <numeric> Problem number apply relationship. quiet Silence extra output.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/add_prm_association.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Describe parameter associations — add_prm_association","text":"time writing, built-distributions pmxcv . marked asterisk require fixed effect parameter calculate CV. log typical log-normal. Optional exact parameter (TRUE, default, calculate integration); unrelated cvtype option. Note, cvtype set \"sqrt\", log-normal gte_prm CVs use square root, integration analytical estimate, regardless association specified.. logexp* modified log-normal log(1+X) logit* logit-normal arcsin* arcsine-transform nmboxcox* Box-Cox transform typically implemented pharmacometrics. Requires lambda parameter. pass custom parameter, use custom transform, pass pdist qdist transform. See Examples. Reminder qdist pdist: Consider qlogis transforms proportion continuous, unbounded number; logit transform. pdist function converts continuous, unbounded number proportion; inverse logit transform. R stats functions work similarly, functions used qdist pdist values expected act similarly. Note functions used describing associations real functions, just syntax application. Based examples, mindful positional arguments acceptable named arguments required. Care given provide modest amount flexibility informative errors fragile points, every error can anticipated. function downstream results seem wrong, association syntax scrutinized. \"functions\" processed like mutate_prm, (eg) the2 substituted value the2; lambda fitted value (like the2), edge case value the2 written explicitly association formula, mutate_prm changes the2 users mindful new association needed. may updated future. Format associations : LHS~fun(OMEGA, args...) LHS: Selector fixed effect parameter. Can {m} (eg, the1), {name} (eg, THETA1) {label} (eg, TVCL). quoted. Multiple associations can defined +. empty. RHS: simple call one function, custom one built-distributions custom(...). lot things can look like simple calls, may break immediately; keep described format everything fine. RHS OMEGA: Selector omega variable. Similar rules fixed effect selector. Can ome{m}, {name} {label}, limited diagonal elements. quoted. OMEGA named argument (OMEGA={selector} considered valid); whatever used first argument \"function\" considered OMEGA selector. NOTE, selecting OMEGA parameter name (eg, OMEGA(2,2)), backticks (eg `OMEGA(2,2)`) must used else selection throw error. RHS args: Applies distribution extra arguments. limited 1, can passed position (eg, lambda nmboxcox exact log). custom(), qdist, pdist arguments needed pass named. nmboxcox transformation, lambda value (especially negative ones) may work well integration-based CV estimation. may occur even lambda fitted stable fitting, predicted ones affected. note intended forewarn might happen.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/add_prm_association.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Describe parameter associations — add_prm_association","text":"Prybylski, J.P. Reporting Coefficient Variation Logit, Box-Cox Non-log-normal Parameters. Clin Pharmacokinet 63, 133-135 (2024). https://doi.org/10.1007/s40262-023-01343-2","code":""},{"path":[]},{"path":"https://jprybylski.github.io/xpose.xtras/reference/add_prm_association.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Describe parameter associations — add_prm_association","text":"","code":"pheno_base %>%    add_prm_association(the1~log(IIVCL),V~log(IIVV)) %>%    get_prm() # get_prm is the only way to see the effect of associations #> Returning parameter estimates from $prob no.1, subprob no.1, method foce #> # A tibble: 8 × 12 #>   type  name      label  value       se     rse fixed diagonal     m     n    cv #> * <chr> <chr>     <chr> <num:>  <num:3> <num:3> <lgl> <lgl>    <int> <int> <num> #> 1 the   THETA1    \"CL\"  0.0068  5.12e-4  0.0753 FALSE NA           1    NA  NA   #> 2 the   THETA2    \"V\"   1.4     7.56e-2  0.0538 FALSE NA           2    NA  NA   #> 3 the   THETA3    \"RUV… 2.86    4.46e-1  0.156  FALSE NA           3    NA  NA   #> 4 the   THETA4    \"RUV… 0      NA       NA      TRUE  NA           4    NA  NA   #> 5 ome   OMEGA(1,… \"IIV… 0.489   7.64e-2  0.156  FALSE TRUE         1     1  52.0 #> 6 ome   OMEGA(2,… \"\"    0.998   1.24e-1  0.125  FALSE FALSE        2     1  NA   #> 7 ome   OMEGA(2,… \"IIV… 0.393   5.32e-2  0.135  FALSE TRUE         2     2  40.9 #> 8 sig   SIGMA(1,… \"\"    1      NA       NA      TRUE  TRUE         1     1  NA   #> # ℹ 1 more variable: shk <num:3> #> # Parameter table includes the following associations: CL~log(IIVCL) and #> V~log(IIVV)  # These values are not fitted as logit-normal, but # just to illustrate: pheno_final %>%    add_prm_association(the1~logit(IIVCL),Vpkg~logit(IIVV)) %>%    get_prm() #> Returning parameter estimates from $prob no.1, subprob no.1, method foce #> # A tibble: 7 × 12 #>   type  name       label     value        se      rse fixed diagonal     m     n #> * <chr> <chr>      <chr>   <num:4>   <num:4>  <num:4> <lgl> <lgl>    <int> <int> #> 1 the   THETA1     \"CLpk… 0.004813  2.365e-4  0.04914 FALSE NA           1    NA #> 2 the   THETA2     \"Vpkg\" 0.9964    2.642e-2  0.02652 FALSE NA           2    NA #> 3 the   THETA3     \"RUVA… 2.784     2.513e-1  0.09027 FALSE NA           3    NA #> 4 ome   OMEGA(1,1) \"IIVC… 0.2009    5.108e-2  0.2543  FALSE TRUE         1     1 #> 5 ome   OMEGA(2,1) \"\"     0.7236    2.654e-1  0.3668  FALSE FALSE        2     1 #> 6 ome   OMEGA(2,2) \"IIVV\" 0.1576    2.614e-2  0.1659  FALSE TRUE         2     2 #> 7 sig   SIGMA(1,1) \"\"     1        NA        NA       TRUE  TRUE         1     1 #> # ℹ 2 more variables: cv <num:4>, shk <num:4> #> # Parameter table includes the following associations: CLpkg~logit(IIVCL) and #> Vpkg~logit(IIVV)  # ... same for Box-Cox pheno_base %>%    add_prm_association(V~nmboxcox(IIVV, lambda=0.5)) %>%    # Naming the argument is optional    add_prm_association(CL~nmboxcox(IIVCL, -0.1)) %>%    get_prm() #> Returning parameter estimates from $prob no.1, subprob no.1, method foce #> # A tibble: 8 × 12 #>   type  name      label  value       se     rse fixed diagonal     m     n    cv #> * <chr> <chr>     <chr> <num:>  <num:3> <num:3> <lgl> <lgl>    <int> <int> <num> #> 1 the   THETA1    \"CL\"  0.0068  5.12e-4  0.0753 FALSE NA           1    NA  NA   #> 2 the   THETA2    \"V\"   1.4     7.56e-2  0.0538 FALSE NA           2    NA  NA   #> 3 the   THETA3    \"RUV… 2.86    4.46e-1  0.156  FALSE NA           3    NA  NA   #> 4 the   THETA4    \"RUV… 0      NA       NA      TRUE  NA           4    NA  NA   #> 5 ome   OMEGA(1,… \"IIV… 0.489   7.64e-2  0.156  FALSE TRUE         1     1  54.5 #> 6 ome   OMEGA(2,… \"\"    0.998   1.24e-1  0.125  FALSE FALSE        2     1  NA   #> 7 ome   OMEGA(2,… \"IIV… 0.393   5.32e-2  0.135  FALSE TRUE         2     2  38.3 #> 8 sig   SIGMA(1,… \"\"    1      NA       NA      TRUE  TRUE         1     1  NA   #> # ℹ 1 more variable: shk <num:3> #> # Parameter table includes the following associations: CL~nmboxcox(IIVCL) and #> V~nmboxcox(IIVV)  # A 'custom' use-case is when logexp, log(1+X), is # desired but 1 is too large. # Again, for this example, treating this like it applies here. pheno_base %>%   add_prm_association(V~custom(IIVV, qdist=function(x) log(0.001+x),         pdist=function(x) exp(x)-0.001)) %>%    get_prm() #> Returning parameter estimates from $prob no.1, subprob no.1, method foce #> # A tibble: 8 × 12 #>   type  name      label  value       se     rse fixed diagonal     m     n    cv #> * <chr> <chr>     <chr> <num:>  <num:3> <num:3> <lgl> <lgl>    <int> <int> <num> #> 1 the   THETA1    \"CL\"  0.0068  5.12e-4  0.0753 FALSE NA           1    NA  NA   #> 2 the   THETA2    \"V\"   1.4     7.56e-2  0.0538 FALSE NA           2    NA  NA   #> 3 the   THETA3    \"RUV… 2.86    4.46e-1  0.156  FALSE NA           3    NA  NA   #> 4 the   THETA4    \"RUV… 0      NA       NA      TRUE  NA           4    NA  NA   #> 5 ome   OMEGA(1,… \"IIV… 0.489   7.64e-2  0.156  FALSE TRUE         1     1  52.0 #> 6 ome   OMEGA(2,… \"\"    0.998   1.24e-1  0.125  FALSE FALSE        2     1  NA   #> 7 ome   OMEGA(2,… \"IIV… 0.393   5.32e-2  0.135  FALSE TRUE         2     2  41.0 #> 8 sig   SIGMA(1,… \"\"    1      NA       NA      TRUE  TRUE         1     1  NA   #> # ℹ 1 more variable: shk <num:3> #> # Parameter table includes the following associations: V~custom(IIVV)  # Dropping association is easy bad_assoc <- pheno_final %>%    add_prm_association(the1~logit(IIVCL),Vpkg~logit(IIVV)) bad_assoc #>  #> ── ~ xp_xtras object  #> Model description: na #> run16.lst overview:  #>  - Software: nonmem 7.5.0  #>  - Attached files (memory usage 484.3 Kb):  #>    + obs tabs: $prob no.1: run16tab  #>    + sim tabs: <none>  #>    + output files: run16.cor, run16.cov, run16.ext, run16.grd, run16.phi, run16.shk  #>    + special: <none>  #>  - gg_theme: theme_readable  #>  - xp_theme: xp_xtra_theme new_x$xp_theme  #>  - Options: dir = ~/Step 3/Step 5/Step 6/Step 9/Step 14/Step 16, quiet = FALSE, manual_import = NULL, cvtype = exact"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/add_relationship.html","id":null,"dir":"Reference","previous_headings":"","what":"Add relationship(s) to an xpose_set — add_relationship","title":"Add relationship(s) to an xpose_set — add_relationship","text":"Add relationship(s) xpose_set","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/add_relationship.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add relationship(s) to an xpose_set — add_relationship","text":"","code":"add_relationship(xpdb_s, ..., .warn = TRUE, .remove = FALSE)  remove_relationship(xpdb_s, ...)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/add_relationship.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add relationship(s) to an xpose_set — add_relationship","text":"xpdb_s <xpose_set> xpose_set object ... <dynamic-dots> One formulas define relationships models. One list formulas can also used, warning generated. .warn <logical> warnings generated non-formula inputs? (default: TRUE) .remove <logical> listed relationships removed? (default: FALSE)","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/add_relationship.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add relationship(s) to an xpose_set — add_relationship","text":"xpose_set object relationships added","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/add_relationship.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add relationship(s) to an xpose_set — add_relationship","text":"","code":"xpdb_set %>%   add_relationship(mod1~fix2) # ouroboros #>  #> ── xpose_set object ──────────────────────────────────────────────────────────── #> • Number of models: 4 #> • Model labels: mod1, mod2, fix1, and fix2 #> • Number of relationships: 4 #> • Focused xpdb objects: none #> • Exposed properties: none #> • Base model: none  xpdb_set %>%   remove_relationship(fix1~mod2) # split down the middle #>  #> ── xpose_set object ──────────────────────────────────────────────────────────── #> • Number of models: 4 #> • Model labels: mod1, mod2, fix1, and fix2 #> • Number of relationships: 2 #> • Focused xpdb objects: none #> • Exposed properties: none #> • Base model: none"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/add_xpdb.html","id":null,"dir":"Reference","previous_headings":"","what":"Add one or more xpdb objects to an xpose_set — add_xpdb","title":"Add one or more xpdb objects to an xpose_set — add_xpdb","text":"Add one xpdb objects xpose_set","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/add_xpdb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add one or more xpdb objects to an xpose_set — add_xpdb","text":"","code":"add_xpdb(xpdb_s, ..., .relationships = NULL)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/add_xpdb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add one or more xpdb objects to an xpose_set — add_xpdb","text":"xpdb_s <xpose_set> xpose_set object ... <dynamic-dots> One xpdb objects add set .relationships <list> list relationships xpdb objects.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/add_xpdb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add one or more xpdb objects to an xpose_set — add_xpdb","text":"xpose_set object new xpdb objects added","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/add_xpdb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add one or more xpdb objects to an xpose_set — add_xpdb","text":"","code":"data(\"xpdb_ex_pk\", package = \"xpose\")  add_xpdb(xpdb_set, ttt=xpdb_ex_pk) #>  #> ── xpose_set object ──────────────────────────────────────────────────────────── #> • Number of models: 5 #> • Model labels: mod1, mod2, fix1, fix2, and ttt #> • Number of relationships: 3 #> • Focused xpdb objects: none #> • Exposed properties: none #> • Base model: none"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/backfill_iofv.html","id":null,"dir":"Reference","previous_headings":"","what":"Add individual objective function to data — backfill_iofv","title":"Add individual objective function to data — backfill_iofv","text":"Add individual objective function data","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/backfill_iofv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add individual objective function to data — backfill_iofv","text":"","code":"backfill_iofv(xpdb, .problem = NULL, .subprob = NULL, .label = \"iOFV\")"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/backfill_iofv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add individual objective function to data — backfill_iofv","text":"xpdb <xpose_data> <xp_xtras> object .problem Problem number .subprob Subproblem number .label name new column. iOFV default.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/backfill_iofv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add individual objective function to data — backfill_iofv","text":"<xp_xtras> object new column data column iofv var type.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/backfill_iofv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add individual objective function to data — backfill_iofv","text":"function work objects software listed nonmem, phi file OBJ column file.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/backfill_iofv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add individual objective function to data — backfill_iofv","text":"","code":"xpdb_x %>%   backfill_iofv() %>%   list_vars() #> List of available variables for problem no. 1 #>  - Subject identifier (id)               : ID #>  - Dependent variable (dv)               : DV #>  - Independent variable (idv)            : TIME #>  - Dose amount (amt)                     : AMT #>  - Event identifier (evid)               : EVID #>  - Model typical predictions (pred)      : PRED #>  - Model individual predictions (ipred)  : IPRED #>  - Model parameter (param)               : KA, CL, V, ALAG1 #>  - Eta (eta)                             : ETA1, ETA2, ETA3 #>  - Individual OFV (iofv)                 : iOFV #>  - Residuals (res)                       : CWRES, IWRES, RES, WRES #>  - Categorical covariates (catcov)       : SEX [0], MED1 [0], MED2 [0] #>  - Continuous covariates (contcov)       : CLCR, AGE, WT #>  - Compartment amounts (a)               : A1, A2 #>  - Not attributed (na)                   : DOSE, SS, II, TAD, CPRED #> List of available variables for problem no. 2 #>  - Subject identifier (id)               : ID #>  - Dependent variable (dv)               : DV #>  - Independent variable (idv)            : TIME #>  - Dose amount (amt)                     : AMT #>  - Event identifier (evid)               : EVID #>  - Model individual predictions (ipred)  : IPRED #>  - Not attributed (na)                   : DOSE, TAD, SEX, CLCR, AGE, WT"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/catdv_vs_dvprobs.html","id":null,"dir":"Reference","previous_headings":"","what":"Non-simulation based likelihood model diagnostic — catdv_vs_dvprobs","title":"Non-simulation based likelihood model diagnostic — catdv_vs_dvprobs","text":"plots attempt provide means verifying estimated likelihoods probabilities categorical outcomes captured within model. smooth spline included (type includes \"s\"), expected overall trend right; relatively flat trend suggests modeled likelihood inconsistent observed outcome.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/catdv_vs_dvprobs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Non-simulation based likelihood model diagnostic — catdv_vs_dvprobs","text":"","code":"catdv_vs_dvprobs(   xpdb,   mapping = NULL,   cutpoint = 1,   type = \"vbs\",   title = \"@y vs. @x | @run\",   subtitle = \"Ofv: @ofv, Number of individuals: @nind\",   caption = \"@dir\",   tag = NULL,   xlab = c(\"probability\", \"basic\"),   facets,   .problem,   quiet,   ... )"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/catdv_vs_dvprobs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Non-simulation based likelihood model diagnostic — catdv_vs_dvprobs","text":"xpdb <xp_xtras> <xpose_data> object mapping ggplot2 style mapping cutpoint <numeric> defined probabilities, one use plots. type See Details. title Plot title subtitle Plot subtitle caption Plot caption tag Plot tag xlab Either use typical basic x-axis label (cutpoint-defined column name) label based probability/likelihood estimating. facets Additional facets .problem Problem number quiet Silence extra debugging output ... additional aesthetics.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/catdv_vs_dvprobs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Non-simulation based likelihood model diagnostic — catdv_vs_dvprobs","text":"","code":"# Test M3 model pkpd_m3 %>%   # Need to ensure var types are set   set_var_types(catdv=BLQ,dvprobs=LIKE) %>%   # Set probs   set_dv_probs(1, 1~LIKE, .dv_var = BLQ) %>%   # Optional, but useful to set levels   set_var_levels(1, BLQ = lvl_bin()) %>%   # Plot with basic xlab makes no assumptions   catdv_vs_dvprobs(xlab = \"basic\") #> Using data from $prob no.1 #> Filtering data by EVID == 0 #> `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")' #> `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'   # Test categorical model vismo_xpdb <- vismo_pomod  %>%   set_var_types(.problem=1, catdv=DV, dvprobs=matches(\"^P\\\\d+$\")) %>%   set_dv_probs(.problem=1, 0~P0,1~P1,ge(2)~P23)  # Various cutpoints (note axes labels and texts) vismo_xpdb %>%   catdv_vs_dvprobs(xlab = \"basic\") #> Using data from $prob no.1 #> Filtering data by EVID == 0 #> `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")' #> `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'  vismo_xpdb %>%   catdv_vs_dvprobs(cutpoint = 2, xlab = \"basic\") #> Using data from $prob no.1 #> Filtering data by EVID == 0 #> `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")' #> `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'  vismo_xpdb %>%   catdv_vs_dvprobs(cutpoint = 3, xlab = \"basic\") #> Using data from $prob no.1 #> Filtering data by EVID == 0 #> `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")' #> `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'   # Latter is arguably clearer with default xlab vismo_xpdb %>%   catdv_vs_dvprobs(cutpoint = 3) #> Using data from $prob no.1 #> Filtering data by EVID == 0 #> `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")' #> `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/check_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify validity of level list — check_levels","title":"Verify validity of level list — check_levels","text":"Verify validity level list","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/check_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify validity of level list — check_levels","text":"","code":"check_levels(lvl_list, index)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/check_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify validity of level list — check_levels","text":"lvl_list <list> formulas leveler functions index Index xp_xtras object","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/check_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify validity of level list — check_levels","text":"Nothing, warning error","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/check_xpose_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Check an xpose_set object — check_xpose_set","title":"Check an xpose_set object — check_xpose_set","text":"Check xpose_set object","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/check_xpose_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check an xpose_set object — check_xpose_set","text":"","code":"check_xpose_set(xpdb_s, .warn = TRUE)  check_xpose_set_item(xpdb_s_i, .example = xpdb_set)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/check_xpose_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check an xpose_set object — check_xpose_set","text":"xpdb_s <xpose_set> xpose_set object .warn <logical> Display warning failure. xpdb_s_i <xpose_set_item> xpose_set_item object (element xpose_set) .example <xpose_set> Basis comparison xpose_s_i","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/check_xpose_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check an xpose_set object — check_xpose_set","text":"TRUE error thrown","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/check_xpose_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check an xpose_set object — check_xpose_set","text":"","code":"check_xpose_set(xpdb_set) #> [1] TRUE  check_xpose_set_item(xpdb_set$mod1) #> [1] TRUE"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/convience.html","id":null,"dir":"Reference","previous_headings":"","what":"Convenience functions used in package — is_formula_list","title":"Convenience functions used in package — is_formula_list","text":"Convenience functions used package","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/convience.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenience functions used in package — is_formula_list","text":"","code":"is_formula_list(x)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/convience.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convenience functions used in package — is_formula_list","text":"x object test","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/desc_from_comments.html","id":null,"dir":"Reference","previous_headings":"","what":"Backfill utility for descriptions — desc_from_comments","title":"Backfill utility for descriptions — desc_from_comments","text":"slightly generic approach getting model descriptions.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/desc_from_comments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Backfill utility for descriptions — desc_from_comments","text":"","code":"desc_from_comments(   xpdb,   start_check = \".*description\",   maxlines = 5,   remove = paste0(start_check, \":\\\\s*\"),   extra_proc = c,   collapse = \" \" )"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/desc_from_comments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Backfill utility for descriptions — desc_from_comments","text":"xpdb <xpose_data> <xp_xtras> object start_check Regular expression used mark start description. tested case-insensitively. maxlines number lines description first code block 1, allows limit. remove default, start check colon, optional whitespace. regex. extra_proc extra processing might desired prior collapsing description lines. vectorized function. collapse Character use collapsing multiple lines.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/desc_from_comments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Backfill utility for descriptions — desc_from_comments","text":"description-updated <xpose_data) object","code":""},{"path":[]},{"path":"https://jprybylski.github.io/xpose.xtras/reference/desc_from_comments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Backfill utility for descriptions — desc_from_comments","text":"","code":"# This has a description, but it's not visible by default pheno_base #>  #> ── ~ xp_xtras object  #> Model description: na #> run6.lst overview:  #>  - Software: nonmem 7.5.0  #>  - Attached files (memory usage 495.2 Kb):  #>    + obs tabs: $prob no.1: run6tab  #>    + sim tabs: <none>  #>    + output files: run6.cor, run6.cov, run6.ext, run6.grd, run6.phi, run6.shk  #>    + special: <none>  #>  - gg_theme: theme_readable  #>  - xp_theme: xp_xtra_theme new_x$xp_theme  #>  - Options: dir = ~/Step 3/Step 5/Step 6, quiet = FALSE, manual_import = NULL, cvtype = exact  # It can be added with the following pheno_base %>%   desc_from_comments() #>  #> ── ~ xp_xtras object  #> Model description: Final structural version of the model: 1 CMT Block IIV on #> CL+V Add Error #> run6.lst overview:  #>  - Software: nonmem 7.5.0  #>  - Attached files (memory usage 495.4 Kb):  #>    + obs tabs: $prob no.1: run6tab  #>    + sim tabs: <none>  #>    + output files: run6.cor, run6.cov, run6.ext, run6.grd, run6.phi, run6.shk  #>    + special: <none>  #>  - gg_theme: theme_readable  #>  - xp_theme: xp_xtra_theme new_x$xp_theme  #>  - Options: dir = ~/Step 3/Step 5/Step 6, quiet = FALSE, manual_import = NULL, cvtype = exact  # Extra processing for preference can also implemented pheno_base %>%   desc_from_comments(extra_proc = tolower) #>  #> ── ~ xp_xtras object  #> Model description: final structural version of the model: 1 cmt block iiv on #> cl+v add error #> run6.lst overview:  #>  - Software: nonmem 7.5.0  #>  - Attached files (memory usage 495.4 Kb):  #>    + obs tabs: $prob no.1: run6tab  #>    + sim tabs: <none>  #>    + output files: run6.cor, run6.cov, run6.ext, run6.grd, run6.phi, run6.shk  #>    + special: <none>  #>  - gg_theme: theme_readable  #>  - xp_theme: xp_xtra_theme new_x$xp_theme  #>  - Options: dir = ~/Step 3/Step 5/Step 6, quiet = FALSE, manual_import = NULL, cvtype = exact  # If a run label ($PROB) would make a good description, use the # following instead: pkpd_m3 %>%   set_prop(descr=get_prop(pkpd_m3,\"label\")) #>  #> ── ~ xp_xtras object  #> Model description: Simulated PKPD #> run.lst overview:  #>  - Software: nonmem 7.5.0  #>  - Attached files (memory usage 1.6 Mb):  #>    + obs tabs: $prob no.1: output.fit, pars.fit  #>    + sim tabs: <none>  #>    + output files: run.cor, run.cov, run.ext, run.grd, run.phi, run.shk  #>    + special: <none>  #>  - gg_theme: theme_readable  #>  - xp_theme: xp_xtra_theme new_x$xp_theme  #>  - Options: dir = ~/pkpdm3, quiet = FALSE, manual_import = NULL, cvtype = exact"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/diagram_lineage.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize xpose_set — diagram_lineage","title":"Visualize xpose_set — diagram_lineage","text":"current state, function intended provide simple visual representation xpose_set. Functionality aesthetic enhancements expected future releases.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/diagram_lineage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize xpose_set — diagram_lineage","text":"","code":"diagram_lineage(xpdb_s, ...)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/diagram_lineage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize xpose_set — diagram_lineage","text":"xpdb_s <xpose_set> object ... later expansion. ignored.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/diagram_lineage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize xpose_set — diagram_lineage","text":"","code":"diagram_lineage(pheno_set) %>%   DiagrammeR::render_graph(layout=\"tree\")  {\"x\":{\"diagram\":\"digraph {\\n\\ngraph [layout = \\\"neato\\\",\\n       outputorder = \\\"edgesfirst\\\",\\n       bgcolor = \\\"white\\\"]\\n\\nnode [fontname = \\\"Helvetica\\\",\\n      fontsize = \\\"10\\\",\\n      shape = \\\"circle\\\",\\n      fixedsize = \\\"true\\\",\\n      width = \\\"0.5\\\",\\n      style = \\\"filled\\\",\\n      fillcolor = \\\"aliceblue\\\",\\n      color = \\\"gray70\\\",\\n      fontcolor = \\\"gray50\\\"]\\n\\nedge [fontname = \\\"Helvetica\\\",\\n     fontsize = \\\"8\\\",\\n     len = \\\"1.5\\\",\\n     color = \\\"gray80\\\",\\n     arrowsize = \\\"0.5\\\"]\\n\\n  \\\"1\\\" [label = \\\"run3\\\", fillcolor = \\\"#F0F8FF\\\", fontcolor = \\\"#000000\\\", pos = \\\"-1.5,6!\\\"] \\n  \\\"2\\\" [label = \\\"run4\\\", fillcolor = \\\"#F0F8FF\\\", fontcolor = \\\"#000000\\\", pos = \\\"-1,5!\\\"] \\n  \\\"3\\\" [label = \\\"run5\\\", fillcolor = \\\"#F0F8FF\\\", fontcolor = \\\"#000000\\\", pos = \\\"-1,5!\\\"] \\n  \\\"4\\\" [label = \\\"run6\\\", fillcolor = \\\"#F0F8FF\\\", fontcolor = \\\"#000000\\\", pos = \\\"-1,4!\\\"] \\n  \\\"5\\\" [label = \\\"run10\\\", fillcolor = \\\"#F0F8FF\\\", fontcolor = \\\"#000000\\\", pos = \\\"-3,3!\\\"] \\n  \\\"6\\\" [label = \\\"run12\\\", fillcolor = \\\"#F0F8FF\\\", fontcolor = \\\"#000000\\\", pos = \\\"-3,2!\\\"] \\n  \\\"7\\\" [label = \\\"run11\\\", fillcolor = \\\"#F0F8FF\\\", fontcolor = \\\"#000000\\\", pos = \\\"0,3!\\\"] \\n  \\\"8\\\" [label = \\\"run13\\\", fillcolor = \\\"#F0F8FF\\\", fontcolor = \\\"#000000\\\", pos = \\\"0,2!\\\"] \\n  \\\"9\\\" [label = \\\"run7\\\", fillcolor = \\\"#F0F8FF\\\", fontcolor = \\\"#000000\\\", pos = \\\"-1,3!\\\"] \\n  \\\"10\\\" [label = \\\"run8\\\", fillcolor = \\\"#F0F8FF\\\", fontcolor = \\\"#000000\\\", pos = \\\"-2,3!\\\"] \\n  \\\"11\\\" [label = \\\"run9\\\", fillcolor = \\\"#F0F8FF\\\", fontcolor = \\\"#000000\\\", pos = \\\"1,3!\\\"] \\n  \\\"12\\\" [label = \\\"run14\\\", fillcolor = \\\"#F0F8FF\\\", fontcolor = \\\"#000000\\\", pos = \\\"1,2!\\\"] \\n  \\\"13\\\" [label = \\\"run15\\\", fillcolor = \\\"#F0F8FF\\\", fontcolor = \\\"#000000\\\", pos = \\\"0.5,1!\\\"] \\n  \\\"14\\\" [label = \\\"run16\\\", fillcolor = \\\"#F0F8FF\\\", fontcolor = \\\"#000000\\\", pos = \\\"1.5,1!\\\"] \\n  \\\"1\\\"->\\\"2\\\" \\n  \\\"1\\\"->\\\"3\\\" \\n  \\\"3\\\"->\\\"4\\\" \\n  \\\"4\\\"->\\\"5\\\" \\n  \\\"5\\\"->\\\"6\\\" \\n  \\\"4\\\"->\\\"7\\\" \\n  \\\"7\\\"->\\\"8\\\" \\n  \\\"4\\\"->\\\"9\\\" \\n  \\\"4\\\"->\\\"10\\\" \\n  \\\"4\\\"->\\\"11\\\" \\n  \\\"11\\\"->\\\"12\\\" \\n  \\\"12\\\"->\\\"13\\\" \\n  \\\"12\\\"->\\\"14\\\" \\n}\",\"config\":{\"engine\":\"dot\",\"options\":null}},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/diff.xpose_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Display deltaOFV values across xpose_set — diff.xpose_set","title":"Display deltaOFV values across xpose_set — diff.xpose_set","text":"base model provided, lineage unclear, first model xpose_set used base model.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/diff.xpose_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display deltaOFV values across xpose_set — diff.xpose_set","text":"","code":"# S3 method for class 'xpose_set' diff(x, ...)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/diff.xpose_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display deltaOFV values across xpose_set — diff.xpose_set","text":"x <xpose_set> object ... <dynamic-dots> Passed <xset_lineage>. .spinner=FALSE can also set .","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/diff.xpose_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display deltaOFV values across xpose_set — diff.xpose_set","text":"<numeric> vector deltaOFV values","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/diff.xpose_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display deltaOFV values across xpose_set — diff.xpose_set","text":"","code":"c() #> NULL"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/duplicated.xpose_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if any xpose_data objects are repeated in xpose_set — duplicated.xpose_set","title":"Check if any xpose_data objects are repeated in xpose_set — duplicated.xpose_set","text":"Check xpose_data objects repeated xpose_set","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/duplicated.xpose_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if any xpose_data objects are repeated in xpose_set — duplicated.xpose_set","text":"","code":"# S3 method for class 'xpose_set' duplicated(x, incomparables = FALSE, ...)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/duplicated.xpose_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if any xpose_data objects are repeated in xpose_set — duplicated.xpose_set","text":"x <xpose_set> incomparables FALSE ... Must empty","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/edit_xpose_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Master xpdb editing function — edit_xpose_data","title":"Master xpdb editing function — edit_xpose_data","text":"Generic function used build dedicated editing functions","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/edit_xpose_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Master xpdb editing function — edit_xpose_data","text":"","code":"edit_xpose_data(   .fun,   .fname,   .data,   ...,   .problem,   .source,   .where,   check_quos = FALSE )"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/edit_xpose_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Master xpdb editing function — edit_xpose_data","text":".fun editing function applied data. .fname name editing function. .data xpose database object. ... Name-value pairs expressions. Use NULL drop variable. .problem problem data modified .source source data xpdb. Can either 'data' output file extension e.g. 'phi'. .vector element names edited special (e.g. .= c('vpc_dat', 'aggr_obs') vpc). check_quos Check variables referenced exists. TRUE matches behavior <xpose::edit_xpose_data> arguments automatically quoted evaluated context data frame. support unquoting splicing. See dplyr vignette(\"programming\") introduction concepts.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/eta_vs_catcov.html","id":null,"dir":"Reference","previous_headings":"","what":"Eta categorical covariate plots (typical) — eta_vs_catcov","title":"Eta categorical covariate plots (typical) — eta_vs_catcov","text":"Eta categorical covariate plots (typical)","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/eta_vs_catcov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Eta categorical covariate plots (typical) — eta_vs_catcov","text":"","code":"eta_vs_catcov(   xpdb,   mapping = NULL,   etavar = NULL,   drop_fixed = TRUE,   orientation = \"x\",   show_n = check_xpdb_x(xpdb, .warn = FALSE),   type = \"bol\",   title = \"Eta versus categorical covariates | @run\",   subtitle = \"Based on @nind individuals, Eta shrink: @etashk\",   caption = \"@dir\",   tag = NULL,   facets,   .problem,   quiet,   ... )"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/eta_vs_catcov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Eta categorical covariate plots (typical) — eta_vs_catcov","text":"xpdb <xp_xtras>  <xpose_data`> object mapping ggplot2 style mapping etavar tidyselect eta variables drop_fixed xpose orientation Passed xplot_boxplot show_n Add \"N=\" plot type Passed xplot_boxplot title Plot title subtitle Plot subtitle caption Plot caption tag Plot tag facets Additional facets .problem Problem number quiet Silence output ... additional aesthetics.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/eta_vs_catcov.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Eta categorical covariate plots (typical) — eta_vs_catcov","text":"ability show number per covariate level inspired package pmplots, implements within xpose ecosystem consistency.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/eta_vs_catcov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Eta categorical covariate plots (typical) — eta_vs_catcov","text":"","code":"if (FALSE) { # \\dontrun{  eta_vs_catcov(xpdb_x)  # Labels and units are also supported xpdb_x %>%   xpose::set_var_labels(AGE=\"Age\", MED1 = \"Digoxin\") %>%   xpose::set_var_units(AGE=\"yrs\") %>%   set_var_levels(SEX=lvl_sex(), MED1 = lvl_bin()) %>%   eta_vs_catcov() } # }"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/eta_vs_contcov.html","id":null,"dir":"Reference","previous_headings":"","what":"Eta continuous covariate plots (typical) — eta_vs_contcov","title":"Eta continuous covariate plots (typical) — eta_vs_contcov","text":"Eta continuous covariate plots (typical)","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/eta_vs_contcov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Eta continuous covariate plots (typical) — eta_vs_contcov","text":"","code":"eta_vs_contcov(   xpdb,   mapping = NULL,   etavar = NULL,   drop_fixed = TRUE,   linsm = FALSE,   type = \"ps\",   title = \"Eta versus continuous covariates | @run\",   subtitle = \"Based on @nind individuals, Eta shrink: @etashk\",   caption = \"@dir\",   tag = NULL,   log = NULL,   guide = TRUE,   facets,   .problem,   quiet,   ... )"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/eta_vs_contcov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Eta continuous covariate plots (typical) — eta_vs_contcov","text":"xpdb <xp_xtras> <xpose_data`> object mapping ggplot2 style mapping etavar tidyselect eta variables drop_fixed xpose linsm type contains \"s\" smooth method lm? type Passed xplot_scatter title Plot title subtitle Plot subtitle caption Plot caption tag Plot tag log Log scale covariate value? guide Add guide line? facets Additional facets .problem Problem number quiet Silence output ... additional aesthetics.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/eta_vs_contcov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Eta continuous covariate plots (typical) — eta_vs_contcov","text":"","code":"if (FALSE) { # \\dontrun{  eta_vs_contcov(xpdb_x)  # Labels and units are also supported xpdb_x %>%   xpose::set_var_labels(AGE=\"Age\", MED1 = \"Digoxin\") %>%   xpose::set_var_units(AGE=\"yrs\") %>%   set_var_levels(SEX=lvl_sex(), MED1 = lvl_bin()) %>%   eta_vs_contcov() } # }"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/expose_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Expose a model parameter of xpdb objects in an xpose_set — expose_param","title":"Expose a model parameter of xpdb objects in an xpose_set — expose_param","text":"Expose model parameter xpdb objects xpose_set","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/expose_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expose a model parameter of xpdb objects in an xpose_set — expose_param","text":"","code":"expose_param(xpdb_s, ..., .problem = NULL, .subprob = NULL, .method = NULL)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/expose_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expose a model parameter of xpdb objects in an xpose_set — expose_param","text":"xpdb_s <xpose_set> xpose_set object ... <dynamic-dots> One parameter expose, using selection rules add_prm_association. .problem <numeric> Problem number apply relationship. .subprob <numeric> Problem number apply relationship. .method <numeric> Problem number apply relationship.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/expose_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expose a model parameter of xpdb objects in an xpose_set — expose_param","text":"xpose_set object parameter exposed","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/expose_param.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Expose a model parameter of xpdb objects in an xpose_set — expose_param","text":"parameter returned top-level, avoid conflicting names prepended .. (e.g., ..ome1). selector used fetch parameter used .. name. better name preferred, convenient renaming functions dplyr needed. using parameter selectors, quotations used complex names, like \"OMEGA(1,1)\", since may read incorrectly otherwise. untransformed parameter used exposure. get_prm call uses transform=FALSE.","code":""},{"path":[]},{"path":"https://jprybylski.github.io/xpose.xtras/reference/expose_param.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expose a model parameter of xpdb objects in an xpose_set — expose_param","text":"","code":"pheno_set %>%   expose_param(the1) %>%   reshape_set() #> # A tibble: 14 × 6 #>    xpdb         label parent       base  focus  ..the1 #>    <named list> <chr> <named list> <lgl> <lgl>   <dbl> #>  1 <xp_xtras>   run3  <chr [1]>    FALSE FALSE 0.00406 #>  2 <xp_xtras>   run4  <chr [1]>    FALSE FALSE 0.00688 #>  3 <xp_xtras>   run5  <chr [1]>    FALSE FALSE 0.00589 #>  4 <xp_xtras>   run6  <chr [1]>    FALSE FALSE 0.0068  #>  5 <xp_xtras>   run10 <chr [1]>    FALSE FALSE 0.00682 #>  6 <xp_xtras>   run12 <chr [1]>    FALSE FALSE 0.00671 #>  7 <xp_xtras>   run11 <chr [1]>    FALSE FALSE 0.00681 #>  8 <xp_xtras>   run13 <chr [1]>    FALSE FALSE 0.00681 #>  9 <xp_xtras>   run7  <chr [1]>    FALSE FALSE 0.00678 #> 10 <xp_xtras>   run8  <chr [1]>    FALSE FALSE 0.00711 #> 11 <xp_xtras>   run9  <chr [1]>    FALSE FALSE 0.00613 #> 12 <xp_xtras>   run14 <chr [1]>    FALSE FALSE 0.0073  #> 13 <xp_xtras>   run15 <chr [1]>    FALSE FALSE 0.00716 #> 14 <xp_xtras>   run16 <chr [1]>    FALSE FALSE 0.00481   pheno_set %>%   expose_param(RUVADD, \"OMEGA(1,1)\") %>%   reshape_set() #> # A tibble: 14 × 7 #>    xpdb         label parent       base  focus ..RUVADD `..OMEGA(1,1)` #>    <named list> <chr> <named list> <lgl> <lgl>    <dbl>          <dbl> #>  1 <xp_xtras>   run3  <chr [1]>    FALSE FALSE     8.35         1.69   #>  2 <xp_xtras>   run4  <chr [1]>    FALSE FALSE     3.07         0.608  #>  3 <xp_xtras>   run5  <chr [1]>    FALSE FALSE     2.8          0.198  #>  4 <xp_xtras>   run6  <chr [1]>    FALSE FALSE     2.86         0.239  #>  5 <xp_xtras>   run10 <chr [1]>    FALSE FALSE     2.87         0.243  #>  6 <xp_xtras>   run12 <chr [1]>    FALSE FALSE     2.87         0.232  #>  7 <xp_xtras>   run11 <chr [1]>    FALSE FALSE     2.86         0.237  #>  8 <xp_xtras>   run13 <chr [1]>    FALSE FALSE     2.87         0.228  #>  9 <xp_xtras>   run7  <chr [1]>    FALSE FALSE     2.28         0.254  #> 10 <xp_xtras>   run8  <chr [1]>    FALSE FALSE     2.78         0.0343 #> 11 <xp_xtras>   run9  <chr [1]>    FALSE FALSE     2.9          0.176  #> 12 <xp_xtras>   run14 <chr [1]>    FALSE FALSE     2.81         0.0387 #> 13 <xp_xtras>   run15 <chr [1]>    FALSE FALSE     2.86         0.0347 #> 14 <xp_xtras>   run16 <chr [1]>    FALSE FALSE     2.78         0.0404  # This function is useful for generating a model-building table pheno_set %>%   # Determine longest lineage   select(all_of(xset_lineage(.))) %>%   # Select key variability parameters   expose_param(RUVADD, \"OMEGA(1,1)\") %>%   # Make sure all models have descriptions   focus_qapply(desc_from_comments) %>%   # Extract description   expose_property(descr) %>%   # Transform to tibble   reshape_set() # %>% pipe into other processing #> # A tibble: 6 × 8 #>   xpdb         label parent       base  focus ..RUVADD `..OMEGA(1,1)` ..descr    #>   <named list> <chr> <named list> <lgl> <lgl>    <dbl>          <dbl> <chr>      #> 1 <xp_xtras>   run3  <chr [1]>    FALSE FALSE     8.35         1.69   Simplest … #> 2 <xp_xtras>   run5  <chr [1]>    FALSE FALSE     2.8          0.198  Updated v… #> 3 <xp_xtras>   run6  <chr [1]>    FALSE FALSE     2.86         0.239  Final str… #> 4 <xp_xtras>   run9  <chr [1]>    FALSE FALSE     2.9          0.176  Test WT o… #> 5 <xp_xtras>   run14 <chr [1]>    FALSE FALSE     2.81         0.0387 Final cov… #> 6 <xp_xtras>   run15 <chr [1]>    FALSE FALSE     2.86         0.0347 Covariate…"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/expose_property.html","id":null,"dir":"Reference","previous_headings":"","what":"Expose a property of xpdb objects in an xpose_set — expose_property","title":"Expose a property of xpdb objects in an xpose_set — expose_property","text":"Expose property xpdb objects xpose_set","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/expose_property.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expose a property of xpdb objects in an xpose_set — expose_property","text":"","code":"expose_property(xpdb_s, ..., .problem = NULL, .subprob = NULL, .method = NULL)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/expose_property.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expose a property of xpdb objects in an xpose_set — expose_property","text":"xpdb_s <xpose_set> xpose_set object ... <dynamic-dots> One properties expose .problem <numeric> Problem number apply relationship. .subprob <numeric> Problem number apply relationship. .method <numeric> Problem number apply relationship.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/expose_property.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expose a property of xpdb objects in an xpose_set — expose_property","text":"xpose_set object properties exposed","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/expose_property.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Expose a property of xpdb objects in an xpose_set — expose_property","text":"property returned top-level, avoid conflicting names prepended .. (e.g., ..descr). properties, transformations applied automatically make useful. includes: etashk epsshk: transformed numeric vectors <get_shk> ofv per-problem properties: transformed needed pulls xpdb default problem.","code":""},{"path":[]},{"path":"https://jprybylski.github.io/xpose.xtras/reference/expose_property.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expose a property of xpdb objects in an xpose_set — expose_property","text":"","code":"xpdb_set <- expose_property(xpdb_set, descr) xpdb_set$mod1$..descr #> [1] \"NONMEM PK example for xpose\"  xpdb_set <- expose_property(xpdb_set, etashk) xpdb_set$mod1$..etashk #> [1]  9.3 28.7 23.7"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/fill_prob_subprob_method.html","id":null,"dir":"Reference","previous_headings":"","what":"Place .problem, .subprob and .method into environment consistently — fill_prob_subprob_method","title":"Place .problem, .subprob and .method into environment consistently — fill_prob_subprob_method","text":"Since common need, functionalized ensure consistency.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/fill_prob_subprob_method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Place .problem, .subprob and .method into environment consistently — fill_prob_subprob_method","text":"","code":"fill_prob_subprob_method(   xpdb,   .problem,   .subprob,   .method,   envir = parent.frame() )"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/fill_prob_subprob_method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Place .problem, .subprob and .method into environment consistently — fill_prob_subprob_method","text":"xpdb <xpose_data> related object .problem NULL missing .subprob NULL missing .method NULL missing envir <environment> assign problem info.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/filter.xpose_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Filtration method for xpose_set — filter.xpose_set","title":"Filtration method for xpose_set — filter.xpose_set","text":"Filtration method xpose_set","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/filter.xpose_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filtration method for xpose_set — filter.xpose_set","text":"","code":"# S3 method for class 'xpose_set' filter(.data, ..., .rowwise = FALSE)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/filter.xpose_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filtration method for xpose_set — filter.xpose_set","text":".data <xpose_set> xpose_set object ... <dynamic-dots> (passed <dplyr::filter>) .rowwise <logical> mutation applied rowwise? (default: FALSE)","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/filter.xpose_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filtration method for xpose_set — filter.xpose_set","text":"","code":"xpdb_set %>%   filter(label==\"mod1\") #>  #> ── xpose_set object ──────────────────────────────────────────────────────────── #> • Number of models: 1 #> • Model labels: mod1 #> • Number of relationships: 0 #> • Focused xpdb objects: none #> • Exposed properties: none #> • Base model: none  xpdb_set %>%   filter(length(parent)>1, .rowwise=TRUE) #> ! No xpdb objects in the set."},{"path":"https://jprybylski.github.io/xpose.xtras/reference/focus_xpdb.html","id":null,"dir":"Reference","previous_headings":"","what":"Focus on an xpdb object in an xpose_set — focus_xpdb","title":"Focus on an xpdb object in an xpose_set — focus_xpdb","text":"piping, set passed, S3 method transformations applied focused xpdb object.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/focus_xpdb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Focus on an xpdb object in an xpose_set — focus_xpdb","text":"","code":"focus_xpdb(xpdb_s, ..., .add = FALSE)  unfocus_xpdb(xpdb_s)  focused_xpdbs(xpdb_s)  focus_function(xpdb_s, fn, ...)  focus_qapply(xpdb_s, fn, ..., .mods = everything())"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/focus_xpdb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Focus on an xpdb object in an xpose_set — focus_xpdb","text":"xpdb_s <xpose_set> xpose_set object ... <dynamic-dots> One xpdb objects focus .add <logical> focus added existing focus? (default: FALSE) fn <function> apply focused xpose_data objects .mods <tidyselect> Model names set quick-apply function. See Details.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/focus_xpdb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Focus on an xpdb object in an xpose_set — focus_xpdb","text":"xpose_set object focused xpdb object(s)","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/focus_xpdb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Focus on an xpdb object in an xpose_set — focus_xpdb","text":"functions used internally, recognized may value user scripting. hoped self-explanatory, examples address common uses. Note: focus_qapply() (re)focuses specified .mods un-focuses elements set used case quick application suffices. Otherwise, focusing sequence focus_function calls (monolithic single focus_function call custom function) preferred.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/focus_xpdb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Focus on an xpdb object in an xpose_set — focus_xpdb","text":"","code":"# Select two xpdb objects to focus on xpdb_set %>% focus_xpdb(mod2,fix1) #>  #> ── xpose_set object ──────────────────────────────────────────────────────────── #> • Number of models: 4 #> • Model labels: mod1, mod2, fix1, and fix2 #> • Number of relationships: 3 #> • Focused xpdb objects: mod2 and fix1 #> • Exposed properties: none #> • Base model: none  # Add a focus xpdb_set %>% focus_xpdb(mod2,fix1) %>% focus_xpdb(mod1, .add=TRUE) #>  #> ── xpose_set object ──────────────────────────────────────────────────────────── #> • Number of models: 4 #> • Model labels: mod1, mod2, fix1, and fix2 #> • Number of relationships: 3 #> • Focused xpdb objects: mod1, mod2, and fix1 #> • Exposed properties: none #> • Base model: none  # Remove focus xpdb_set %>% focus_xpdb(mod2,fix1) %>% focus_xpdb() #>  #> ── xpose_set object ──────────────────────────────────────────────────────────── #> • Number of models: 4 #> • Model labels: mod1, mod2, fix1, and fix2 #> • Number of relationships: 3 #> • Focused xpdb objects: none #> • Exposed properties: none #> • Base model: none  # Focus function and tidyselect pheno_set %>%   focus_xpdb(everything()) %>%   # Add iOFV col and iofv type to all xpdbs in set   focus_function(backfill_iofv) %>%   # Show 1... can do all like this, too, but no need   unfocus_xpdb() %>%   select(run6) %>%   {.[[1]]$xpdb} %>%   list_vars() #> List of available variables for problem no. 1 #>  - Subject identifier (id)               : ID #>  - Dependent variable (dv)               : DV #>  - Independent variable (idv)            : TIME #>  - Dose amount (amt)                     : AMT #>  - Event identifier (evid)               : EVID #>  - Missing dependent variable (mdv)      : MDV #>  - Model typical predictions (pred)      : PRED #>  - Model individual predictions (ipred)  : IPRED #>  - Eta (eta)                             : ETA1, ETA2 #>  - Individual OFV (iofv)                 : iOFV #>  - Residuals (res)                       : IWRES, CWRES, NPDE, RES, WRES #>  - Categorical covariates (catcov)       : APGR ('Apgar score') [10] #>  - Continuous covariates (contcov)       : WT ('Weight', kg) #>  - Not attributed (na)                   : IRES, CL, V, CRES  # Quick-apply version of previous example pheno_set %>%   focus_qapply(backfill_iofv) %>%   select(run6) %>%   {.[[1]]$xpdb} %>%   list_vars() #> List of available variables for problem no. 1 #>  - Subject identifier (id)               : ID #>  - Dependent variable (dv)               : DV #>  - Independent variable (idv)            : TIME #>  - Dose amount (amt)                     : AMT #>  - Event identifier (evid)               : EVID #>  - Missing dependent variable (mdv)      : MDV #>  - Model typical predictions (pred)      : PRED #>  - Model individual predictions (ipred)  : IPRED #>  - Eta (eta)                             : ETA1, ETA2 #>  - Individual OFV (iofv)                 : iOFV #>  - Residuals (res)                       : IWRES, CWRES, NPDE, RES, WRES #>  - Categorical covariates (catcov)       : APGR ('Apgar score') [10] #>  - Continuous covariates (contcov)       : WT ('Weight', kg) #>  - Not attributed (na)                   : IRES, CL, V, CRES"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/franken_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine a property from all components of a franken_xpdb — franken_prop","title":"Combine a property from all components of a franken_xpdb — franken_prop","text":"Combine property components franken_xpdb","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/franken_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine a property from all components of a franken_xpdb — franken_prop","text":"","code":"franken_prop(   xpdb_f,   xpdb_list,   prop,   problem = NULL,   glue_cmd = function(x) glue::glue_collapse(x, \", \", last = \" and \"),   indices = seq_along(xpdb_list) )"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/franken_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine a property from all components of a franken_xpdb — franken_prop","text":"xpdb_f product franken_xpdb xpdb_list List source xpose_data objects. prop <character> property combine problem <numeric> necessary specify glue_cmd special transformation properties, including collapse. indices <numeric> Index values 1:length(xpdb_list) include property collapse.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/franken_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine a property from all components of a franken_xpdb — franken_prop","text":"xpdb_f new properties.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/franken_prop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combine a property from all components of a franken_xpdb — franken_prop","text":"function meant called within franken_xpdb. expected ready handle cases , example, multiple props set pipe, problem-associated property set problem=0 property also set. low-level function, use outside internal functions intended.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/franken_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine a property from all components of a franken_xpdb — franken_prop","text":"","code":"if (FALSE) { # \\dontrun{ # This is designed to be called in a function environment which # would provide something like the following:  xpdb_f <- xpose.xtras:::franken_xpdb(pheno_base, pheno_final, .types=\"catcov\")  xpdb_list <- list(pheno_base, pheno_final)  # The following would be inside the function xpdb_f %>%   franken_prop(xpdb_list, \"run\",     glue_cmd = function(x) paste(x, collapse=\"+\"))  # xpdb_f may have to be written to a few times if # and problem-specific combinations are needed:  updated <- xpdb_f %>%   franken_prop(xpdb_list, \"run\",     glue_cmd = function(x) paste(x, collapse=\"+\"))  # problem will also be available. Assume there's # no reason to loop here, but that may be needed problem <- 1 updated <- updated %>%   franken_prop(xpdb_list, \"ofv\",  problem=problem,     glue_cmd = function(x) paste(x, collapse=\"&\")) } # }"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/franken_xpdb.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine several xpose_data objects into one — franken_xpdb","title":"Combine several xpose_data objects into one — franken_xpdb","text":"internal function designed meet needs specific plotting functions","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/franken_xpdb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine several xpose_data objects into one — franken_xpdb","text":"","code":"franken_xpdb(   ...,   .cols = NULL,   .types = NULL,   prop_transforms = NULL,   problem,   quiet = TRUE )"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/franken_xpdb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine several xpose_data objects into one — franken_xpdb","text":"... <dynamic-dots> xpose_data xp_xtra objects .cols <tidyselect> data columns .types <character> data types addition columns prop_transforms <function> Extra processing using <franken_prop> problem <numeric> Problems look cols types (defaults ) quiet Prevents extra output.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/franken_xpdb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine several xpose_data objects into one — franken_xpdb","text":"first xpose_data object new data columns","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/franken_xpdb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine several xpose_data objects into one — franken_xpdb","text":"","code":"xpose.xtras:::franken_xpdb(pheno_base, pheno_final, .types=\"catcov\") %>%   xpose::get_data() %>%   select(starts_with(\"APGR\")) #> Returning data from $prob no.1 #> # A tibble: 744 × 3 #>    APGR  APGR_1 APGR_2 #>    <fct> <fct>  <fct>  #>  1 7     7      7      #>  2 7     7      7      #>  3 7     7      7      #>  4 7     7      7      #>  5 7     7      7      #>  6 7     7      7      #>  7 7     7      7      #>  8 7     7      7      #>  9 7     7      7      #> 10 7     7      7      #> # ℹ 734 more rows"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/get_prm.html","id":null,"dir":"Reference","previous_headings":"","what":"Access model parameters — get_prm","title":"Access model parameters — get_prm","text":"Access model parameter estimates xpdb object. Methods added implement extensions. See Details.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/get_prm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access model parameters — get_prm","text":"","code":"get_prm(   xpdb,   .problem = NULL,   .subprob = NULL,   .method = NULL,   digits = 4,   transform = TRUE,   show_all = FALSE,   quiet )"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/get_prm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access model parameters — get_prm","text":"xpdb xpose_data object model output file data extracted. .problem problem used, default returns last one file. .subprob subproblem used, default returns last one file. .method estimation method used, default returns last one file digits number significant digits displayed. transform diagonal OMEGA SIGMA elements transformed standard deviation diagonal elements transformed correlations. show_all Logical, whether 0 fixed -diagonal elements removed output. quiet Logical, FALSE messages printed console.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/get_prm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access model parameters — get_prm","text":"tibble single problem/subprob named list multiple problem|subprob.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/get_prm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Access model parameters — get_prm","text":"using <xp_xtra> object, function add column output CV% diagonal element omega calculated. CV% respect resulting structural parameter, unless default log-normal association applicable update add_prm_association. log-normal, users may prefer use first-order CV% (\\(\\sqrt{\\omega^2}\\)) instead exact. case, xpdb <- set_option(xpdb, cvtype=\"sqrt\") get preferred form. single omega parameter associated multiple fixed effect parameters, cv column list. omega row associated multiple fixed effect parameters, multiple CV values. case even transformation log-normal therefore scale-invariant, given need generality. Note approach used calculate CV% assumes untransformed scale fitted parameter value (unrelated transform=TRUE). means, example, logit-normal fitted parameter value, expected value something constrained 0 1, unbounded, continuous transformed value. function <mutate_prm> intended help might issue.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/get_prm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Access model parameters — get_prm","text":"Prybylski, J.P. Reporting Coefficient Variation Logit, Box-Cox Non-log-normal Parameters. Clin Pharmacokinet 63, 133-135 (2024). https://doi.org/10.1007/s40262-023-01343-2","code":""},{"path":[]},{"path":"https://jprybylski.github.io/xpose.xtras/reference/get_prm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access model parameters — get_prm","text":"","code":"# xpose parameter table get_prm(xpose::xpdb_ex_pk, .problem = 1) #> Returning parameter estimates from $prob no.1, subprob no.1, method foce #> # A tibble: 11 × 10 #>    type  name       label      value       se     rse fixed diagonal     m     n #>  * <chr> <chr>      <chr>      <dbl>    <dbl>   <dbl> <lgl> <lgl>    <dbl> <dbl> #>  1 the   THETA1     \"TVCL\"   2.63e+1  0.892    0.0339 FALSE NA           1    NA #>  2 the   THETA2     \"TVV\"    1.35e+0  0.0438   0.0325 FALSE NA           2    NA #>  3 the   THETA3     \"TVKA\"   4.20e+0  0.809    0.192  FALSE NA           3    NA #>  4 the   THETA4     \"LAG\"    2.08e-1  0.0157   0.0755 FALSE NA           4    NA #>  5 the   THETA5     \"Prop. … 2.05e-1  0.0224   0.110  FALSE NA           5    NA #>  6 the   THETA6     \"Add. E… 1.06e-2  0.00366  0.347  FALSE NA           6    NA #>  7 the   THETA7     \"CRCL o… 7.17e-3  0.00170  0.237  FALSE NA           7    NA #>  8 ome   OMEGA(1,1) \"IIV CL\" 2.70e-1  0.0233   0.0862 FALSE TRUE         1     1 #>  9 ome   OMEGA(2,2) \"IIV V\"  1.95e-1  0.0320   0.164  FALSE TRUE         2     2 #> 10 ome   OMEGA(3,3) \"IIV KA\" 1.38e+0  0.202    0.146  FALSE TRUE         3     3 #> 11 sig   SIGMA(1,1) \"\"       1   e+0 NA       NA      TRUE  TRUE         1     1  # xpose.xtra parameter table (basically the same) get_prm(pheno_final, .problem = 1) #> Returning parameter estimates from $prob no.1, subprob no.1, method foce #> # A tibble: 7 × 12 #>   type  name  label    value        se      rse fixed diagonal     m     n    cv #> * <chr> <chr> <chr>  <num:4>   <num:4>  <num:4> <lgl> <lgl>    <int> <int> <num> #> 1 the   THET… \"CLp… 0.004813  2.365e-4  0.04914 FALSE NA           1    NA NA    #> 2 the   THET… \"Vpk… 0.9964    2.642e-2  0.02652 FALSE NA           2    NA NA    #> 3 the   THET… \"RUV… 2.784     2.513e-1  0.09027 FALSE NA           3    NA NA    #> 4 ome   OMEG… \"IIV… 0.2009    5.108e-2  0.2543  FALSE TRUE         1     1 20.30 #> 5 ome   OMEG… \"\"    0.7236    2.654e-1  0.3668  FALSE FALSE        2     1 NA    #> 6 ome   OMEG… \"IIV… 0.1576    2.614e-2  0.1659  FALSE TRUE         2     2 15.86 #> 7 sig   SIGM… \"\"    1        NA        NA       TRUE  TRUE         1     1 NA    #> # ℹ 1 more variable: shk <num:4>  # For the sake of example, even though these were all lognormal: pheno_final %>%   add_prm_association(CLpkg~logit(IIVCL)) %>%   add_prm_association(Vpkg~nmboxcox(IIVV, lambda = 0.01)) %>%   get_prm(.problem = 1) #> Returning parameter estimates from $prob no.1, subprob no.1, method foce #> # A tibble: 7 × 12 #>   type  name  label    value        se      rse fixed diagonal     m     n    cv #> * <chr> <chr> <chr>  <num:4>   <num:4>  <num:4> <lgl> <lgl>    <int> <int> <num> #> 1 the   THET… \"CLp… 0.004813  2.365e-4  0.04914 FALSE NA           1    NA NA    #> 2 the   THET… \"Vpk… 0.9964    2.642e-2  0.02652 FALSE NA           2    NA NA    #> 3 the   THET… \"RUV… 2.784     2.513e-1  0.09027 FALSE NA           3    NA NA    #> 4 ome   OMEG… \"IIV… 0.2009    5.108e-2  0.2543  FALSE TRUE         1     1 20.19 #> 5 ome   OMEG… \"\"    0.7236    2.654e-1  0.3668  FALSE FALSE        2     1 NA    #> 6 ome   OMEG… \"IIV… 0.1576    2.614e-2  0.1659  FALSE TRUE         2     2 15.85 #> 7 sig   SIGM… \"\"    1        NA        NA       TRUE  TRUE         1     1 NA    #> # ℹ 1 more variable: shk <num:4> #> # Parameter table includes the following associations: CLpkg~logit(IIVCL) and #> Vpkg~nmboxcox(IIVV)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/get_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function to extract a property from a model summary — get_prop","title":"Generic function to extract a property from a model summary — get_prop","text":"Generic function extract property model summary","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/get_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function to extract a property from a model summary — get_prop","text":"","code":"get_prop(xpdb, prop, .problem = NULL, .subprob = NULL, .method = NULL)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/get_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function to extract a property from a model summary — get_prop","text":"xpdb <xpose_dataxpose::xpose_data> object prop <character> Property extract .problem <numeric> Problem number use. Uses xpose default provided. .subprob <numeric> Subproblem number use. Uses xpose default provided. .method <character> Method use. Uses xpose default provided.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/get_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function to extract a property from a model summary — get_prop","text":"Exact value property","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/get_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic function to extract a property from a model summary — get_prop","text":"","code":"data(\"xpdb_ex_pk\", package = \"xpose\")  get_prop(xpdb_ex_pk, \"descr\") #> [1] \"NONMEM PK example for xpose\""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/get_set_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Get full index for xpose_data data — get_index","title":"Get full index for xpose_data data — get_index","text":"Get full index xpose_data data","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/get_set_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get full index for xpose_data data — get_index","text":"","code":"get_index(xpdb, .problem = NULL, ...)  set_index(xpdb, index, ...)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/get_set_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get full index for xpose_data data — get_index","text":"xpdb <xpose_dataxpose::xpose_data> object .problem <numeric> Problem number use. Uses problems NULL ... Ignored. future expansion index <tibble> Index set","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/get_set_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get full index for xpose_data data — get_index","text":"Tibble index","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/get_set_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get full index for xpose_data data — get_index","text":"","code":"get_index(xpose::xpdb_ex_pk) #> # A tibble: 46 × 6 #>    table        col   type   label units problem #>    <chr>        <chr> <chr>  <chr> <chr>   <int> #>  1 catab001.csv ID    id     NA    NA          1 #>  2 catab001.csv SEX   catcov NA    NA          1 #>  3 catab001.csv MED1  catcov NA    NA          1 #>  4 catab001.csv MED2  catcov NA    NA          1 #>  5 sdtab001     ID    id     NA    NA          1 #>  6 sdtab001     DOSE  na     NA    NA          1 #>  7 sdtab001     AMT   amt    NA    NA          1 #>  8 sdtab001     SS    na     NA    NA          1 #>  9 sdtab001     II    na     NA    NA          1 #> 10 sdtab001     TIME  idv    NA    NA          1 #> # ℹ 36 more rows"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/get_shk.html","id":null,"dir":"Reference","previous_headings":"","what":"Get shrinkage estimates from model summary — get_shk","title":"Get shrinkage estimates from model summary — get_shk","text":"function parses shrinkages currently presented get_summary, dependent current implementation function.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/get_shk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get shrinkage estimates from model summary — get_shk","text":"","code":"get_shk(xpdb, wh = \"eta\", .problem = NULL, .subprob = NULL, .method = NULL)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/get_shk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get shrinkage estimates from model summary — get_shk","text":"xpdb xpose_data object. wh shrinkage extract (\"eta\" \"eps\") .problem Problem number use. Uses xpose default provided. .subprob <numeric> Subproblem number use. Uses xpose default provided. .method <character> Method use. Uses xpose default provided.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/get_shk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get shrinkage estimates from model summary — get_shk","text":"numeric vector shrinkage estimates.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/get_shk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get shrinkage estimates from model summary — get_shk","text":"","code":"data(\"xpdb_ex_pk\", package = \"xpose\")  # eta Shrinkage get_shk(xpdb_ex_pk) #> [1]  9.3 28.7 23.7  # epsilon Shrinkage get_shk(xpdb_ex_pk, wh = \"eps\") #> [1] 14.9"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/grab_xpose_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Grab processed xpose_plot — grab_xpose_plot","title":"Grab processed xpose_plot — grab_xpose_plot","text":"function simple unlikely capture every possible situation. Paginated plots supported. helpful working xpose plots patchwork ggpubr functions.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/grab_xpose_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grab processed xpose_plot — grab_xpose_plot","text":"","code":"grab_xpose_plot(plot)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/grab_xpose_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grab processed xpose_plot — grab_xpose_plot","text":"plot <xpose_plot> list thereof","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/grab_xpose_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grab processed xpose_plot — grab_xpose_plot","text":"Grob list grobs","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/grab_xpose_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grab processed xpose_plot — grab_xpose_plot","text":"","code":"single_plot <- xpdb_x %>% eta_vs_catcov(etavar = ETA1) %>% grab_xpose_plot() #> Using data from $prob no.1 #> Removing duplicated rows based on: ID #> Tidying data by ID, DOSE, AMT, SS, II ... and 23 more variables #> Warning: attributes are not identical across measure variables; they will be dropped  listof_plots <- xpdb_x %>% eta_vs_catcov(etavar = c(ETA1,ETA3)) %>% grab_xpose_plot() #> Using data from $prob no.1 #> Removing duplicated rows based on: ID #> Tidying data by ID, DOSE, AMT, SS, II ... and 23 more variables #> Warning: attributes are not identical across measure variables; they will be dropped #> Using data from $prob no.1 #> Removing duplicated rows based on: ID #> Tidying data by ID, DOSE, AMT, SS, II ... and 23 more variables #> Warning: attributes are not identical across measure variables; they will be dropped"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/grapes-p-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary check if LHS is parent of LHS — %p%","title":"Binary check if LHS is parent of LHS — %p%","text":"Binary check LHS parent LHS","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/grapes-p-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binary check if LHS is parent of LHS — %p%","text":"","code":"possible_parent %p% possible_child"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/grapes-p-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Binary check if LHS is parent of LHS — %p%","text":"possible_parent <xpose_set_item> object suspected parent ... possible_child ... <xpose_set_item> object suspected child","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/grapes-p-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Binary check if LHS is parent of LHS — %p%","text":"","code":"# Detect direct parent pheno_set$run6 %p% pheno_set$run7 #> [1] TRUE  # Detect non-parentage (does not try to \"flip\" parentage) pheno_set$run6 %p% pheno_set$run5 #> [1] FALSE  # Does not detect grand-parentage pheno_set$run6 %p% pheno_set$run13 #> [1] FALSE"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/grid_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid plots — eta_grid","title":"Grid plots — eta_grid","text":"essentially wrapper around ggpairs, except uses xpose motifs styling. Note function produces lot repetitive output quiet=FALSE; may issue, look like error occurred many covariates individual parameter estimates included.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/grid_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grid plots — eta_grid","text":"","code":"eta_grid(   xpdb,   mapping = NULL,   etavar = NULL,   drop_fixed = TRUE,   title = \"Eta correlations | @run\",   subtitle = \"Based on @nind individuals, Eta shrink: @etashk\",   caption = \"@dir\",   tag = NULL,   pairs_opts,   .problem,   quiet,   ... )  cov_grid(   xpdb,   mapping = NULL,   cols = NULL,   covtypes = c(\"cont\", \"cat\"),   show_n = TRUE,   drop_fixed = TRUE,   title = \"Covariate relationships | @run\",   subtitle = \"Based on @nind individuals\",   caption = \"@dir\",   tag = NULL,   pairs_opts,   .problem,   quiet,   ... )  eta_vs_cov_grid(   xpdb,   mapping = NULL,   etavar = NULL,   cols = NULL,   covtypes = c(\"cont\", \"cat\"),   show_n = TRUE,   drop_fixed = TRUE,   title = \"Eta covariate correlations | @run\",   subtitle = \"Based on @nind individuals, Eta shrink: @etashk\",   caption = \"@dir\",   tag = NULL,   etacov = TRUE,   pairs_opts,   .problem,   quiet,   ... )"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/grid_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grid plots — eta_grid","text":"xpdb <xp_xtras>  <xpose_data`> object mapping ggplot2 style mapping etavar tidyselect eta variables drop_fixed xpose title Plot title subtitle Plot subtitle caption Plot caption tag Plot tag pairs_opts List arguments pass _opts. See <xplot_pairs> .problem Problem number quiet Silence extra debugging output ... Passed xplot_pairs cols tidyselect covariates variables covtypes Subset specific covariate type? show_n Count number IDs category etacov Foreta_vs_cov_grid, eta sorted covariates give x orientation covariate relationships.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/grid_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grid plots — eta_grid","text":"xp_tras_plot object","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/grid_plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grid plots — eta_grid","text":"","code":"if (FALSE) { # \\dontrun{  eta_grid(xpdb_x) cov_grid(xpdb_x) eta_vs_cov_grid(xpdb_x)  # Labels and units are also supported xpdb_x %>%   xpose::set_var_labels(AGE=\"Age\", MED1 = \"Digoxin\") %>%   xpose::set_var_units(AGE=\"yrs\") %>%   set_var_levels(SEX=lvl_sex(), MED1 = lvl_bin()) %>%   eta_vs_cov_grid()  } # }"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/iofv_vs_mod.html","id":null,"dir":"Reference","previous_headings":"","what":"Objective function changes across models — iofv_vs_mod","title":"Objective function changes across models — iofv_vs_mod","text":"Another visualization individual objective functions change course model development.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/iofv_vs_mod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Objective function changes across models — iofv_vs_mod","text":"","code":"iofv_vs_mod(   xpdb_s,   ...,   .lineage = FALSE,   auto_backfill = FALSE,   mapping = NULL,   orientation = \"x\",   type = \"bjc\",   title = \"Individual OFVs across models\",   subtitle = \"Based on @nind individuals, Initial OFV: @ofv\",   caption = \"Initial @dir\",   tag = NULL,   axis.text = \"@run\",   facets,   .problem,   quiet )"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/iofv_vs_mod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Objective function changes across models — iofv_vs_mod","text":"xpdb_s <xpose_set> object ... <tidyselect> models set. empty, models used order position set. May also use formula, just processed .vars(). .lineage <logical> TRUE, ... processed auto_backfill <logical> TRUE, apply <backfill_iofv()> automatically. FALSE default encourage data control separate process plotting control. mapping ggplot2 style mapping orientation Defaults x type Passed <xplot_boxplot> title Plot title subtitle Plot subtitle caption Plot caption tag Plot tag axis.text label model. parsed per-model basis. facets Additional facets .problem Problem number quiet Silence output","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/iofv_vs_mod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Objective function changes across models — iofv_vs_mod","text":"","code":"if (FALSE) { # \\dontrun{  pheno_set %>%   focus_qapply(backfill_iofv) %>%   iofv_vs_mod()  pheno_set %>%   focus_qapply(backfill_iofv) %>%   iofv_vs_mod(run3,run11,run14,run15)  pheno_set %>%   focus_qapply(backfill_iofv) %>%   iofv_vs_mod(.lineage = TRUE)  } # }"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/irep.html","id":null,"dir":"Reference","previous_headings":"","what":"Add simulation counter — irep","title":"Add simulation counter — irep","text":"Add column containing simulation counter (irep). new simulation counted every time value x different previous value duplicate. version function require IDs ascending, work datasets IDs repeated (sequence). cases read separate individuals NONMEM, NONMEM need detect repetition ID sequences (NONMEM, 1,1,2,2,3,3,1,1,2,2,3,3 6 individuals, regardless 2 repeats 3 individuals). Given vast majority datasets use 1 individual per ID, (said IDs always ascending), one corrections implemented.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/irep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add simulation counter — irep","text":"","code":"irep(x, quiet = FALSE)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/irep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add simulation counter — irep","text":"x column used computing simulation number, usually ID column. quiet Logical, FALSE messages printed console.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/irep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add simulation counter — irep","text":"Bugfix irep.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/irep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add simulation counter — irep","text":"","code":"data(\"xpdb_ex_pk\", package = \"xpose\")  xpdb_ex_pk_2 <- xpdb_ex_pk %>%  mutate(sim_id = irep(ID), .problem = 2) #> irep: 20 simulations found."},{"path":"https://jprybylski.github.io/xpose.xtras/reference/is_xp_xtras.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic class checker for xp_xtras — is_xp_xtras","title":"Basic class checker for xp_xtras — is_xp_xtras","text":"Basic class checker xp_xtras","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/is_xp_xtras.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic class checker for xp_xtras — is_xp_xtras","text":"","code":"is_xp_xtras(x)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/is_xp_xtras.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic class checker for xp_xtras — is_xp_xtras","text":"x Object test","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/is_xp_xtras.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Basic class checker for xp_xtras — is_xp_xtras","text":"<logical> TRUE xp_xtras object","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/is_xp_xtras.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Basic class checker for xp_xtras — is_xp_xtras","text":"","code":"is_xp_xtras(xpose::xpdb_ex_pk) #> [1] FALSE  is_xp_xtras(xpdb_x) #> [1] TRUE"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/levelers.html","id":null,"dir":"Reference","previous_headings":"","what":"Level-defining helper functions — as_leveler","title":"Level-defining helper functions — as_leveler","text":"Level-defining helper functions","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/levelers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Level-defining helper functions — as_leveler","text":"","code":"as_leveler(x, .start_index = 1)  is_leveler(x)  lvl_bin(x = c(\"No\", \"Yes\"), .start_index = 0)  lvl_sex()  lvl_inord(x, .start_index = 1)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/levelers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Level-defining helper functions — as_leveler","text":"x <character> vector levels .start_index <numeric> starting index levels","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/levelers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Level-defining helper functions — as_leveler","text":"Special character vector suitable used leveler","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/levelers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Level-defining helper functions — as_leveler","text":"","code":"set_var_levels(xpdb_x,   SEX = lvl_sex(),   MED1 = lvl_bin(),   MED2 = lvl_inord(c(\"n\",\"y\"), .start_index = 0)   ) #>  #> ── ~ xp_xtras object  #> Model description: NONMEM PK example for xpose #> run001.lst overview:  #>  - Software: nonmem 7.3.0  #>  - Attached files (memory usage 1.6 Mb):  #>    + obs tabs: $prob no.1: catab001.csv, cotab001, patab001, sdtab001  #>    + sim tabs: $prob no.2: simtab001.zip  #>    + output files: run001.cor, run001.cov, run001.ext, run001.grd, run001.phi, run001.shk  #>    + special: <none>  #>  - gg_theme: theme_readable  #>  - xp_theme: xp_xtra_theme new_x$xp_theme  #>  - Options: dir = data, quiet = FALSE, manual_import = NULL, cvtype = exact"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/list_dv_probs.html","id":null,"dir":"Reference","previous_headings":"","what":"For a categorical DV variable, show associated probabilities — list_dv_probs","title":"For a categorical DV variable, show associated probabilities — list_dv_probs","text":"convenient quick check probabilities currently assigned, based set_dv_probs.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/list_dv_probs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"For a categorical DV variable, show associated probabilities — list_dv_probs","text":"","code":"list_dv_probs(xpdb, .problem = NULL, .dv_var = NULL)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/list_dv_probs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"For a categorical DV variable, show associated probabilities — list_dv_probs","text":"xpdb <xp_xtras> object .problem <numeric> Problem number use. Uses problems NULL .dv_var <tidyselect> column categorical observation. Default first-listed catdv.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/list_dv_probs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"For a categorical DV variable, show associated probabilities — list_dv_probs","text":"<tibble> probabilities","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/list_dv_probs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"For a categorical DV variable, show associated probabilities — list_dv_probs","text":"","code":"pkpd_m3 %>%   set_dv_probs(1, 1~LIKE, .dv_var = BLQ) %>%   list_dv_probs(.dv_var=BLQ) #> Warning: Var types not properly assigned as `dvprobs`, but probabilities will still be #> applied: LIKE #> Warning: Var type for DV not properly assigned as `catdv`, but probabilities will still #> be applied: BLQ #> # A tibble: 1 × 3 #>   value qual  prob  #>   <dbl> <chr> <chr> #> 1     1 NA    LIKE"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/list_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Updates to list_vars — list_vars","title":"Updates to list_vars — list_vars","text":"accommodate changes made xpose.xtras, <list_vars> needed minimal updates.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/list_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Updates to list_vars — list_vars","text":"","code":"list_vars(xpdb, .problem = NULL, ...)  # Default S3 method list_vars(xpdb, .problem = NULL, ...)  # S3 method for class 'xp_xtras' list_vars(xpdb, .problem = NULL, ...)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/list_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Updates to list_vars — list_vars","text":"xpdb <xpose_data> <xp_xtras> object .problem <numeric> Problem number use. Uses problems NULL ... blank.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/list_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Updates to list_vars — list_vars","text":"<tibble> variables","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/list_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Updates to list_vars — list_vars","text":"","code":"list_vars(xpose::xpdb_ex_pk) #>  #> List of available variables for problem no. 1  #>  - Subject identifier (id)               : ID #>  - Dependent variable (dv)               : DV #>  - Independent variable (idv)            : TIME #>  - Dose amount (amt)                     : AMT #>  - Event identifier (evid)               : EVID #>  - Model typical predictions (pred)      : PRED #>  - Model individual predictions (ipred)  : IPRED #>  - Model parameter (param)               : KA, CL, V, ALAG1 #>  - Eta (eta)                             : ETA1, ETA2, ETA3 #>  - Residuals (res)                       : CWRES, IWRES, RES, WRES #>  - Categorical covariates (catcov)       : SEX, MED1, MED2 #>  - Continuous covariates (contcov)       : CLCR, AGE, WT #>  - Compartment amounts (a)               : A1, A2 #>  - Not attributed (na)                   : DOSE, SS, II, TAD, CPRED #>  #> List of available variables for problem no. 2  #>  - Subject identifier (id)               : ID #>  - Dependent variable (dv)               : DV #>  - Independent variable (idv)            : TIME #>  - Dose amount (amt)                     : AMT #>  - Event identifier (evid)               : EVID #>  - Model individual predictions (ipred)  : IPRED #>  - Not attributed (na)                   : DOSE, TAD, SEX, CLCR, AGE, WT  list_vars(xpdb_x) #> List of available variables for problem no. 1 #>  - Subject identifier (id)               : ID #>  - Dependent variable (dv)               : DV #>  - Independent variable (idv)            : TIME #>  - Dose amount (amt)                     : AMT #>  - Event identifier (evid)               : EVID #>  - Model typical predictions (pred)      : PRED #>  - Model individual predictions (ipred)  : IPRED #>  - Model parameter (param)               : KA, CL, V, ALAG1 #>  - Eta (eta)                             : ETA1, ETA2, ETA3 #>  - Residuals (res)                       : CWRES, IWRES, RES, WRES #>  - Categorical covariates (catcov)       : SEX [0], MED1 [0], MED2 [0] #>  - Continuous covariates (contcov)       : CLCR, AGE, WT #>  - Compartment amounts (a)               : A1, A2 #>  - Not attributed (na)                   : DOSE, SS, II, TAD, CPRED #> List of available variables for problem no. 2 #>  - Subject identifier (id)               : ID #>  - Dependent variable (dv)               : DV #>  - Independent variable (idv)            : TIME #>  - Dose amount (amt)                     : AMT #>  - Event identifier (evid)               : EVID #>  - Model individual predictions (ipred)  : IPRED #>  - Not attributed (na)                   : DOSE, TAD, SEX, CLCR, AGE, WT"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/modavg_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Model average plots — dv_vs_ipred_modavg","title":"Model average plots — dv_vs_ipred_modavg","text":"use model averaging set planned.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/modavg_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model average plots — dv_vs_ipred_modavg","text":"","code":"dv_vs_ipred_modavg(   xpdb_s,   ...,   .lineage = FALSE,   algorithm = c(\"maa\", \"msa\"),   weight_type = c(\"individual\", \"population\"),   auto_backfill = FALSE,   weight_basis = c(\"ofv\", \"aic\", \"res\"),   res_col = \"RES\",   quiet )  dv_vs_pred_modavg(   xpdb_s,   ...,   .lineage = FALSE,   algorithm = c(\"maa\", \"msa\"),   weight_type = c(\"individual\", \"population\"),   auto_backfill = FALSE,   weight_basis = c(\"ofv\", \"aic\", \"res\"),   res_col = \"RES\",   quiet )  ipred_vs_idv_modavg(   xpdb_s,   ...,   .lineage = FALSE,   algorithm = c(\"maa\", \"msa\"),   weight_type = c(\"individual\", \"population\"),   auto_backfill = FALSE,   weight_basis = c(\"ofv\", \"aic\", \"res\"),   res_col = \"RES\",   quiet )  pred_vs_idv_modavg(   xpdb_s,   ...,   .lineage = FALSE,   algorithm = c(\"maa\", \"msa\"),   weight_type = c(\"individual\", \"population\"),   auto_backfill = FALSE,   weight_basis = c(\"ofv\", \"aic\", \"res\"),   res_col = \"RES\",   quiet )  plotfun_modavg(   xpdb_s,   ...,   .lineage = FALSE,   avg_cols = NULL,   avg_by_type = NULL,   algorithm = c(\"maa\", \"msa\"),   weight_type = c(\"individual\", \"population\"),   auto_backfill = FALSE,   weight_basis = c(\"ofv\", \"aic\", \"res\"),   res_col = \"RES\",   .fun = NULL,   .funargs = list(),   quiet )"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/modavg_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model average plots — dv_vs_ipred_modavg","text":"xpdb_s <xpose_set> object ... <tidyselect> models set. empty, models used order position set. May also use formula, just processed .vars(). .lineage <logical> TRUE, ... processed algorithm <character> Model selection model averaging weight_type <character> Individual-level averaging full dataset. auto_backfill <logical> true, <backfill_iofv> automatically applied. weight_basis <character> Weigh OFV (default), AIC residual. res_col <character> Column weight \"res\" weight basis. quiet <logical> Minimize extra output. avg_cols <tidyselect> columns data average avg_by_type <character> Mainly use wrapper functions. Column type average, resulting column names must valid avg_cols (ie, across objects set). avg_cols overwritten. .fun <function> slightly convenient piping model-averaged xpose_data plotting function. .funargs <list> Extra args pass function. passing tidyselect arguments, mindful quosures might needed. See Examples.","code":""},{"path":[]},{"path":"https://jprybylski.github.io/xpose.xtras/reference/modavg_plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model average plots — dv_vs_ipred_modavg","text":"","code":"if (FALSE) { # \\dontrun{  pheno_set %>%   dv_vs_ipred_modavg(run8,run9,run10, auto_backfill = TRUE)  pheno_set %>%   dv_vs_pred_modavg(run8,run9,run10, auto_backfill = TRUE)  pheno_set %>%   ipred_vs_idv_modavg(run8,run9,run10, auto_backfill = TRUE)  pheno_set %>%   pred_vs_idv_modavg(run8,run9,run10, auto_backfill = TRUE)  # Model averaged ETA covariates pheno_set %>%   plotfun_modavg(run8,run9,run10, auto_backfill = TRUE,      avg_by_type = \"eta\",.fun = eta_vs_catcov,      # Note quosure      .funargs = list(etavar=rlang::quo(ETA1)))  } # }"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/modavg_xpdb.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a model-averaged xpose data object — modavg_xpdb","title":"Create a model-averaged xpose data object — modavg_xpdb","text":"function helper plotting functions models xpose_set can averaged together. implementation attempts match extend cited prior work.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/modavg_xpdb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a model-averaged xpose data object — modavg_xpdb","text":"","code":"modavg_xpdb(   xpdb_s,   ...,   .lineage = FALSE,   avg_cols = NULL,   avg_by_type = NULL,   algorithm = c(\"maa\", \"msa\"),   weight_type = c(\"individual\", \"population\"),   auto_backfill = FALSE,   weight_basis = c(\"ofv\", \"aic\", \"res\"),   res_col = \"RES\",   quiet )"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/modavg_xpdb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a model-averaged xpose data object — modavg_xpdb","text":"xpdb_s <xpose_set> object ... <tidyselect> models set. empty, models used order position set. May also use formula, just processed .vars(). .lineage <logical> TRUE, ... processed avg_cols <tidyselect> columns data average avg_by_type <character> Mainly use wrapper functions. Column type average, resulting column names must valid avg_cols (ie, across objects set). avg_cols overwritten. algorithm <character> Model selection model averaging weight_type <character> Individual-level averaging full dataset. auto_backfill <logical> true, <backfill_iofv> automatically applied. weight_basis <character> Weigh OFV (default), AIC residual. res_col <character> Column weight \"res\" weight basis. quiet <logical> Minimize extra output.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/modavg_xpdb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a model-averaged xpose data object — modavg_xpdb","text":"Weight-averaged <xpose_data> object.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/modavg_xpdb.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a model-averaged xpose data object — modavg_xpdb","text":"Uster, D.W., Stocker, S.L., Carland, J.E., Brett, J., Marriott, D.J.E., Day, R.O. Wicha, S.G. (2021), Model Averaging/Selection Approach Improves Predictive Performance Model-Informed Precision Dosing: Vancomycin Case Study. Clin. Pharmacol. Ther., 109: 175-183. https://doi.org/10.1002/cpt.2065","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/modavg_xpdb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a model-averaged xpose data object — modavg_xpdb","text":"","code":"pheno_set %>%   modavg_xpdb(     avg_cols = IPRED,     auto_backfill = TRUE,     algorithm = \"maa\",     weight_basis = \"aic\"   ) #>  #> ── ~ xp_xtras object  #> Model description: na #> run3.lst overview:  #>  - Software: nonmem 7.5.0  #>  - Attached files (memory usage 843 Kb):  #>    + obs tabs: $prob no.1 (modified): na, run3tab  #>    + sim tabs: <none>  #>    + output files: run3.cor, run3.cov, run3.ext, run3.grd, run3.phi, run3.shk  #>    + special: <none>  #>  - gg_theme: theme_readable  #>  - xp_theme: xp_xtra_theme new_x$xp_theme  #>  - Options: dir = ~/Step 3, quiet = FALSE, manual_import = NULL, cvtype = exact"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/modify_xpdb.html","id":null,"dir":"Reference","previous_headings":"","what":"Add, remove or rename variables in an xpdb — modify_xpdb","title":"Add, remove or rename variables in an xpdb — modify_xpdb","text":"mutate_x() adds new variables preserves existing ones. select() keeps listed variables; rename() keeps variables. Note: function uses xpose.xtras::edit_xpose_data, otherwise <xpose::mutate>.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/modify_xpdb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add, remove or rename variables in an xpdb — modify_xpdb","text":"","code":"mutate_x(.data, ..., .problem, .source, .where)  rename_x(.data, ..., .problem, .source, .where)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/modify_xpdb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add, remove or rename variables in an xpdb — modify_xpdb","text":".data xpose database object. ... Name-value pairs expressions. Use NULL drop variable. .problem problem data modified .source source data xpdb. Can either 'data' output file extension e.g. 'phi'. .vector element names edited special (e.g. .= c('vpc_dat', 'aggr_obs') vpc).","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/mutate.xpose_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Mutation method for xpose_set — mutate.xpose_set","title":"Mutation method for xpose_set — mutate.xpose_set","text":"Mutation method xpose_set","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/mutate.xpose_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mutation method for xpose_set — mutate.xpose_set","text":"","code":"# S3 method for class 'xpose_set' mutate(.data, ..., .force = FALSE, .retest = !.force, .rowwise = FALSE)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/mutate.xpose_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mutation method for xpose_set — mutate.xpose_set","text":".data <xpose_set> xpose_set object ... <dynamic-dots> Mutations apply xpose_set (passed <dplyr::mutate>) .force <logical> top-level elements allowed manipulated? (default: FALSE) .retest <logical> xpose_set retested mutation? (default: !force) .rowwise <logical> mutation applied rowwise? (default: FALSE)","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/mutate.xpose_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mutation method for xpose_set — mutate.xpose_set","text":"","code":"xpdb_set %>%   # Adds foo = bar for all objects in the set   mutate(foo = \"bar\") %>%   # Reshape to visualize   reshape_set() #> # A tibble: 4 × 6 #>   xpdb         label parent       base  focus foo   #>   <named list> <chr> <named list> <lgl> <lgl> <chr> #> 1 <xp_xtras>   mod1  <chr [1]>    FALSE FALSE bar   #> 2 <xp_xtras>   mod2  <chr [1]>    FALSE FALSE bar   #> 3 <xp_xtras>   fix1  <chr [1]>    FALSE FALSE bar   #> 4 <xp_xtras>   fix2  <chr [1]>    FALSE FALSE bar"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/mutate_prm.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform parameter values in place — mutate_prm","title":"Transform parameter values in place — mutate_prm","text":"Apply transformations fitted parameter values. fitted, sometimes parameter values easy communicate, transform outside xpose ecosystem limits available features. best experience, function can update parameter values used xpose get_prm functions. time transformations applied param vars (list_vars), can already done mutate method. works theta parameters. valid mutations applied sequentially, double call the2~the2^3 result effectively the2~the2^9, example. RSE values calculated runtime within get_prm, updated (updatable) function.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/mutate_prm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform parameter values in place — mutate_prm","text":"","code":"mutate_prm(   xpdb,   ...,   .autose = TRUE,   .problem = NULL,   .subprob = NULL,   .method = NULL,   .sesim = 1e+05,   quiet )"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/mutate_prm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform parameter values in place — mutate_prm","text":"xpdb <xp_xtras> object ... ... <dynamic-dots> One formulae define transformations parameters. RHS formulas can function value. value can function call like mutate() (the1~exp(the1)). .autose <logical> function used transform simulation used transform current SE new SE. Precision transformation dependent .sesim. parameter values assigned function, option simply scale SE maintain RSE. See Details. .problem <numeric> Problem number apply relationship. .subprob <numeric> Problem number apply relationship. .method <numeric> Problem number apply relationship. .sesim <numeric> Length simulated rnorm vector .autose. quiet Silence extra output.","code":""},{"path":[]},{"path":"https://jprybylski.github.io/xpose.xtras/reference/mutate_prm.html","id":"important-points-about-covariance-and-correlation","dir":"Reference","previous_headings":"","what":"Important points about covariance and correlation","title":"Transform parameter values in place — mutate_prm","text":"Covariance correlation parameters adjusted standard error (SE) values changed directly .autose. transformation applied function fixed effect parameter (eg, ~plogis), resulting SE may unexpected scale; now reporting standard deviation transformed potentially non-normal distribution. parameter fit transformed scale (constrained appropriate bounds), likely different SE given covariance estimation methods (excluding non-parametric resampling-based) treat constrained parameter continuous unconstrained. updates variance-covariance values (correlation values, though mostly invariant) applied entire matrices. piped directly get_prm, SE estimate shown, <get_file> can used see complete updated variance-covariance values. useful matrices used define priors Bayesian model fitting, re-scaling -diagonal elements handled automatically. function transform parameters result accurate autose result. call (the1~exp()) value (the1~2) used, standard error simply scaled.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/mutate_prm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform parameter values in place — mutate_prm","text":"","code":"vismo_pomod %>%   # Function   mutate_prm(THETA11~exp) %>%   # Value (se will not be scaled); plogis = inverse logit   mutate_prm(THETA12~plogis(THETA12)) %>%   get_prm() #> Warning: Since a function was not provided, `autose` will be scaled to maintain the same #> RSE. #> Returning parameter estimates from $prob no.1, subprob no.1, method lce #> Warning: [$prob no.1, subprob no.1, lce] $SIGMA labels did not match the number of SIGMAs in the `.ext` file. #> Warning: Shrinkage missing for sigma estimates, if any are modeled. Using NA in this #> table. #> # A tibble: 16 × 12 #>    type  name    label   value       se     rse fixed diagonal     m     n    cv #>  * <chr> <chr>   <chr> <num:3>  <num:3> <num:3> <lgl> <lgl>    <int> <int> <num> #>  1 the   THETA1  \"THE…  7.19   NA       NA      TRUE  NA           1    NA  NA   #>  2 the   THETA2  \"THE…  4.06   NA       NA      TRUE  NA           2    NA  NA   #>  3 the   THETA3  \"THE… -2.88   NA       NA      TRUE  NA           3    NA  NA   #>  4 the   THETA4  \"THE…  2.2    NA       NA      TRUE  NA           4    NA  NA   #>  5 the   THETA5  \"THE…  0.671  NA       NA      TRUE  NA           5    NA  NA   #>  6 the   THETA6  \"THE… -1.06   NA       NA      TRUE  NA           6    NA  NA   #>  7 the   THETA7  \"THE…  0.881  NA       NA      TRUE  NA           7    NA  NA   #>  8 the   THETA8  \"THE… -0.602  NA       NA      TRUE  NA           8    NA  NA   #>  9 the   THETA9  \"THE… -0.527  NA       NA      TRUE  NA           9    NA  NA   #> 10 the   THETA10 \"THE…  0.66   NA       NA      TRUE  NA          10    NA  NA   #> 11 the   THETA11 \"LOG…  0.0333  1.5 e-3  0.0451 FALSE NA          11    NA  NA   #> 12 the   THETA12 \"THE…  0.0157  7.27e-4  0.0463 FALSE NA          12    NA  NA   #> 13 the   THETA13 \"THE… -4.35    2.75e-1  0.0631 FALSE NA          13    NA  NA   #> 14 the   THETA14 \"THE… 21.9     2.44e+0  0.111  FALSE NA          14    NA  NA   #> 15 ome   OMEGA(… \"ETA…  0.639   8.16e-2  0.128  FALSE TRUE         1     1  71.0 #> 16 sig   SIGMA(… \"\"     0      NA       NA      TRUE  TRUE         1     1  NA   #> # ℹ 1 more variable: shk <num:3>"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/param_selector.html","id":null,"dir":"Reference","previous_headings":"","what":"Select parameter row number — param_selector","title":"Select parameter row number — param_selector","text":"selection rules described <add_prm_association>.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/param_selector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select parameter row number — param_selector","text":"","code":"param_selector(sel, prm_tbl)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/param_selector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select parameter row number — param_selector","text":"sel <character> Selector parameter prm_tbl <tibble> Like output get_prm()","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/param_selector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select parameter row number — param_selector","text":"<integer> selected row number. Can used get value elements information prm_tbl.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pheno_base.html","id":null,"dir":"Reference","previous_headings":"","what":"An xp_xtras example of a base model — pheno_base","title":"An xp_xtras example of a base model — pheno_base","text":"Base model phenobarbital neonates.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pheno_base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An xp_xtras example of a base model — pheno_base","text":"","code":"pheno_base"},{"path":[]},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pheno_base.html","id":"xp-xtras","dir":"Reference","previous_headings":"","what":"xp_xtras","title":"An xp_xtras example of a base model — pheno_base","text":"xp_xtras object.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pheno_base.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"An xp_xtras example of a base model — pheno_base","text":"https://doi.org/10.1159/000457062 nlmixr2data::pheno_sd","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pheno_base.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An xp_xtras example of a base model — pheno_base","text":"run6 <pheno_set>","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pheno_final.html","id":null,"dir":"Reference","previous_headings":"","what":"An xp_xtras example of a final model — pheno_final","title":"An xp_xtras example of a final model — pheno_final","text":"Final model phenobarbital neonates.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pheno_final.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An xp_xtras example of a final model — pheno_final","text":"","code":"pheno_final"},{"path":[]},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pheno_final.html","id":"xp-xtras","dir":"Reference","previous_headings":"","what":"xp_xtras","title":"An xp_xtras example of a final model — pheno_final","text":"xp_xtras object.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pheno_final.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"An xp_xtras example of a final model — pheno_final","text":"https://doi.org/10.1159/000457062 nlmixr2data::pheno_sd","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pheno_final.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An xp_xtras example of a final model — pheno_final","text":"re-parameterized covariate-building work, case identify relationship Apgar score. run16 <pheno_set>","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pheno_saem.html","id":null,"dir":"Reference","previous_headings":"","what":"An xp_xtras example of a final model — pheno_saem","title":"An xp_xtras example of a final model — pheno_saem","text":"Final model phenobarbital neonates.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pheno_saem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An xp_xtras example of a final model — pheno_saem","text":"","code":"pheno_saem"},{"path":[]},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pheno_saem.html","id":"xp-xtras","dir":"Reference","previous_headings":"","what":"xp_xtras","title":"An xp_xtras example of a final model — pheno_saem","text":"xp_xtras object.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pheno_saem.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"An xp_xtras example of a final model — pheno_saem","text":"https://doi.org/10.1159/000457062 nlmixr2data::pheno_sd","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pheno_saem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An xp_xtras example of a final model — pheno_saem","text":"pheno_final fitted SAEM/IMP. part <pheno_set>","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pheno_set.html","id":null,"dir":"Reference","previous_headings":"","what":"A more complex example of xpose_set object — pheno_set","title":"A more complex example of xpose_set object — pheno_set","text":"Model-building set phenobarbital neonates PK data used across multiple packages.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pheno_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A more complex example of xpose_set object — pheno_set","text":"","code":"pheno_set"},{"path":[]},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pheno_set.html","id":"xpose-set","dir":"Reference","previous_headings":"","what":"xpose_set","title":"A more complex example of xpose_set object — pheno_set","text":"xpose_set object length 14 branched lineage.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pheno_set.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A more complex example of xpose_set object — pheno_set","text":"https://doi.org/10.1159/000457062 nlmixr2data::pheno_sd","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pheno_set.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A more complex example of xpose_set object — pheno_set","text":"demonstration high-quality model-building, just typical simple example.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pkpd_m3.html","id":null,"dir":"Reference","previous_headings":"","what":"An xp_xtras example of an M3 model — pkpd_m3","title":"An xp_xtras example of an M3 model — pkpd_m3","text":"representative PK/PD model M3 fitting applied.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pkpd_m3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An xp_xtras example of an M3 model — pkpd_m3","text":"","code":"pkpd_m3"},{"path":[]},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pkpd_m3.html","id":"xp-xtras","dir":"Reference","previous_headings":"","what":"xp_xtras","title":"An xp_xtras example of an M3 model — pkpd_m3","text":"xp_xtras object.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pkpd_m3.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"An xp_xtras example of an M3 model — pkpd_m3","text":"https://doi.org/10.1002/psp4.13219","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pkpd_m3.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"An xp_xtras example of an M3 model — pkpd_m3","text":"Beal, S.L. Ways Fit PK Model Data Quantification Limit. J Pharmacokinet Pharmacodyn 28, 481-504 (2001). https://doi.org/10.1023/:1012299115260 Prybylski JP. Indirect modeling derived outcomes: minor prediction discrepancies cause concern? CPT Pharmacometrics Syst Pharmacol. 2024; 00: 1-9. doi:10.1002/psp4.13219","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pkpd_m3_df.html","id":null,"dir":"Reference","previous_headings":"","what":"An xp_xtras example of an M3 model (dataset) — pkpd_m3_df","title":"An xp_xtras example of an M3 model (dataset) — pkpd_m3_df","text":"dataset used fit pkpd_m3 model.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pkpd_m3_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An xp_xtras example of an M3 model (dataset) — pkpd_m3_df","text":"","code":"pkpd_m3_df"},{"path":[]},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pkpd_m3_df.html","id":"xp-xtras","dir":"Reference","previous_headings":"","what":"xp_xtras","title":"An xp_xtras example of an M3 model (dataset) — pkpd_m3_df","text":"xp_xtras object.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pkpd_m3_df.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"An xp_xtras example of an M3 model (dataset) — pkpd_m3_df","text":"https://doi.org/10.1002/psp4.13219","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pkpd_m3_df.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"An xp_xtras example of an M3 model (dataset) — pkpd_m3_df","text":"Prybylski JP. Indirect modeling derived outcomes: minor prediction discrepancies cause concern? CPT Pharmacometrics Syst Pharmacol. 2024; 00: 1-9. doi:10.1002/psp4.13219","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pred_vs_pred.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare model predictions — ipred_vs_ipred","title":"Compare model predictions — ipred_vs_ipred","text":"two models xpose_set, functions useful comparing individual population predictions","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pred_vs_pred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare model predictions — ipred_vs_ipred","text":"","code":"ipred_vs_ipred(   xpdb_s,   ...,   .inorder = FALSE,   type = \"pls\",   title = \"Individual prediction comparison | @run\",   subtitle = \"Ofv: @ofv, Eps shrink: @epsshk\",   caption = \"@dir\",   tag = NULL,   log = NULL,   guide = TRUE,   facets,   .problem,   quiet )  pred_vs_pred(   xpdb_s,   ...,   .inorder = FALSE,   type = \"pls\",   title = \"Population prediction comparison | @run\",   subtitle = \"Ofv: @ofv, Eps shrink: @epsshk\",   caption = \"@dir\",   tag = NULL,   log = NULL,   guide = TRUE,   facets,   .problem,   quiet )"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pred_vs_pred.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare model predictions — ipred_vs_ipred","text":"xpdb_s <xpose_set> object ... See <two_set_dots> .inorder See <two_set_dots> type Passed xplot_scatter title Plot title subtitle Plot subtitle caption Plot caption tag Plot tag log Log scale covariate value? guide Add guide line? facets Additional facets .problem Problem number quiet Silence output","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pred_vs_pred.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare model predictions — ipred_vs_ipred","text":"","code":"pheno_set %>%   ipred_vs_ipred(run5,run15) #> Using data from $prob no.1 #> Filtering data by EVID == 0 #> `geom_smooth()` using formula = 'y ~ x' #> `geom_smooth()` using formula = 'y ~ x'   pheno_set %>%   pred_vs_pred(run5,run15) #> Using data from $prob no.1 #> Filtering data by EVID == 0 #> `geom_smooth()` using formula = 'y ~ x' #> `geom_smooth()` using formula = 'y ~ x'"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/proc_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert levels list into tibble — proc_levels","title":"Convert levels list into tibble — proc_levels","text":"Consumes formula list converts corresponding tibble.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/proc_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert levels list into tibble — proc_levels","text":"","code":"proc_levels(lvl_list)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/proc_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert levels list into tibble — proc_levels","text":"lvl_list <list> formulas","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/proc_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert levels list into tibble — proc_levels","text":"<tibble> levels","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pull.xpose_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Pulling method for xpose_set — pull.xpose_set","title":"Pulling method for xpose_set — pull.xpose_set","text":"Pulling method xpose_set","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pull.xpose_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pulling method for xpose_set — pull.xpose_set","text":"","code":"# S3 method for class 'xpose_set' pull(.data, ...)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pull.xpose_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pulling method for xpose_set — pull.xpose_set","text":".data <xpose_set> xpose_set object ... <dynamic-dots> (passed <pull>)","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/pull.xpose_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pulling method for xpose_set — pull.xpose_set","text":"","code":"xpdb_set %>%   pull(xpdb) #> $mod1 #>  #> ── ~ xp_xtras object  #> Model description: NONMEM PK example for xpose #> run001.lst overview:  #>  - Software: nonmem 7.3.0  #>  - Attached files (memory usage 1.4 Mb):  #>    + obs tabs: $prob no.1: catab001.csv, cotab001, patab001, sdtab001  #>    + sim tabs: $prob no.2: simtab001.zip  #>    + output files: run001.cor, run001.cov, run001.ext, run001.grd, run001.phi, run001.shk  #>    + special: <none>  #>  - gg_theme: theme_readable  #>  - xp_theme: xp_xtra_theme new_x$xp_theme  #>  - Options: dir = data, quiet = FALSE, manual_import = NULL, cvtype = exact #>  #> $mod2 #>  #> ── ~ xp_xtras object  #> Model description: NONMEM PK example for xpose #> run001.lst overview:  #>  - Software: nonmem 7.3.0  #>  - Attached files (memory usage 1.4 Mb):  #>    + obs tabs: $prob no.1: catab001.csv, cotab001, patab001, sdtab001  #>    + sim tabs: $prob no.2: simtab001.zip  #>    + output files: run001.cor, run001.cov, run001.ext, run001.grd, run001.phi, run001.shk  #>    + special: <none>  #>  - gg_theme: theme_readable  #>  - xp_theme: xp_xtra_theme new_x$xp_theme  #>  - Options: dir = data, quiet = FALSE, manual_import = NULL, cvtype = exact #>  #> $fix1 #>  #> ── ~ xp_xtras object  #> Model description: NONMEM PK example for xpose #> run001.lst overview:  #>  - Software: nonmem 7.3.0  #>  - Attached files (memory usage 1.4 Mb):  #>    + obs tabs: $prob no.1: catab001.csv, cotab001, patab001, sdtab001  #>    + sim tabs: $prob no.2: simtab001.zip  #>    + output files: run001.cor, run001.cov, run001.ext, run001.grd, run001.phi, run001.shk  #>    + special: <none>  #>  - gg_theme: theme_readable  #>  - xp_theme: xp_xtra_theme new_x$xp_theme  #>  - Options: dir = data, quiet = FALSE, manual_import = NULL, cvtype = exact #>  #> $fix2 #>  #> ── ~ xp_xtras object  #> Model description: NONMEM PK example for xpose #> run001.lst overview:  #>  - Software: nonmem 7.3.0  #>  - Attached files (memory usage 1.4 Mb):  #>    + obs tabs: $prob no.1: catab001.csv, cotab001, patab001, sdtab001  #>    + sim tabs: $prob no.2: simtab001.zip  #>    + output files: run001.cor, run001.cov, run001.ext, run001.grd, run001.phi, run001.shk  #>    + special: <none>  #>  - gg_theme: theme_readable  #>  - xp_theme: xp_xtra_theme new_x$xp_theme  #>  - Options: dir = data, quiet = FALSE, manual_import = NULL, cvtype = exact #>"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr all_of, any_of, filter, mutate, pull, rename, select","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/rename.xpose_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Renaming method for xpose_set — rename.xpose_set","title":"Renaming method for xpose_set — rename.xpose_set","text":"Renaming method xpose_set","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/rename.xpose_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Renaming method for xpose_set — rename.xpose_set","text":"","code":"# S3 method for class 'xpose_set' rename(.data, ...)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/rename.xpose_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Renaming method for xpose_set — rename.xpose_set","text":".data <xpose_set> xpose_set object ... <dynamic-dots> (passed indirectly <dplyr::mutate>)","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/rename.xpose_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Renaming method for xpose_set — rename.xpose_set","text":"","code":"xpdb_set %>%   rename(Mod = mod1) #>  #> ── xpose_set object ──────────────────────────────────────────────────────────── #> • Number of models: 4 #> • Model labels: Mod, mod2, fix1, and fix2 #> • Number of relationships: 3 #> • Focused xpdb objects: none #> • Exposed properties: none #> • Base model: none #> ! Parent(s) not in {xpose_set} for mod2: mod1"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/reportable_digits.html","id":null,"dir":"Reference","previous_headings":"","what":"Reportable digits for model fit — reportable_digits","title":"Reportable digits for model fit — reportable_digits","text":"opinionated function optimization routines report number significant digits (eg, FO-based), number digits considered reportable.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/reportable_digits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reportable digits for model fit — reportable_digits","text":"","code":"reportable_digits(xpdb, .default = 3, .problem, .subprob, .method)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/reportable_digits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reportable digits for model fit — reportable_digits","text":"xpdb <xpose_dataxpose::xpose_data> object .default <numeric> Default number digits return found .problem <numeric> Problem number use. Uses problem provided. .subprob <numeric> Subproblem number use. Uses xpose default provided. .method <character> Method use. Uses xpose default provided.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/reportable_digits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reportable digits for model fit — reportable_digits","text":"Number reportable digits","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/reportable_digits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reportable digits for model fit — reportable_digits","text":"","code":"reportable_digits(xpdb_x) #> [1] 3"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/reshape_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert xpose_set to a nested list. — reshape_set","title":"Convert xpose_set to a nested list. — reshape_set","text":"amounts convenience function tidy manipulations.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/reshape_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert xpose_set to a nested list. — reshape_set","text":"","code":"reshape_set(x)  unreshape_set(y)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/reshape_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert xpose_set to a nested list. — reshape_set","text":"x <xpose_set> xpose_set object y <tibble> nested table xpose_set","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/reshape_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert xpose_set to a nested list. — reshape_set","text":"<tibble> Nested list, <xpose_set>","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/reshape_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert xpose_set to a nested list. — reshape_set","text":"","code":"rset <- reshape_set(xpdb_set) # Properties (exposed and top-level) can be seen. xpdb objects are nested in the xpdb column. rset %>% dplyr::select(-xpdb) %>% dplyr::glimpse() #> Rows: 4 #> Columns: 4 #> $ label  <chr> \"mod1\", \"mod2\", \"fix1\", \"fix2\" #> $ parent <named list> NA, \"mod1\", \"mod2\", \"fix1\" #> $ base   <lgl> FALSE, FALSE, FALSE, FALSE #> $ focus  <lgl> FALSE, FALSE, FALSE, FALSE  unreshape_set(rset) #>  #> ── xpose_set object ──────────────────────────────────────────────────────────── #> • Number of models: 4 #> • Model labels: mod1, mod2, fix1, and fix2 #> • Number of relationships: 3 #> • Focused xpdb objects: none #> • Exposed properties: none #> • Base model: none  # The reversibility of reshaping can be confirmed: identical(xpdb_set,reshape_set(xpdb_set) %>% unreshape_set()) #> [1] TRUE"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/select.xpose_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Selection method for xpose_set — select.xpose_set","title":"Selection method for xpose_set — select.xpose_set","text":"Selection method xpose_set","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/select.xpose_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selection method for xpose_set — select.xpose_set","text":"","code":"# S3 method for class 'xpose_set' select(.data, ...)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/select.xpose_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selection method for xpose_set — select.xpose_set","text":".data <xpose_set> xpose_set object ... <dynamic-dots> (passed <select_subset>)","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/select.xpose_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Selection method for xpose_set — select.xpose_set","text":"","code":"xpdb_set %>%   select(starts_with(\"fix\")) #>  #> ── xpose_set object ──────────────────────────────────────────────────────────── #> • Number of models: 2 #> • Model labels: fix1 and fix2 #> • Number of relationships: 2 #> • Focused xpdb objects: none #> • Exposed properties: none #> • Base model: none #> ! Parent(s) not in {xpose_set} for fix1: mod2  xpdb_set %>%   select(mod1, fix1) #>  #> ── xpose_set object ──────────────────────────────────────────────────────────── #> • Number of models: 2 #> • Model labels: mod1 and fix1 #> • Number of relationships: 1 #> • Focused xpdb objects: none #> • Exposed properties: none #> • Base model: none #> ! Parent(s) not in {xpose_set} for fix1: mod2"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/select_subset.html","id":null,"dir":"Reference","previous_headings":"","what":"Convenience wrapper for tidyselect — select_subset","title":"Convenience wrapper for tidyselect — select_subset","text":"intended use internal function select subset xpdb objects xpose_set.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/select_subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenience wrapper for tidyselect — select_subset","text":"","code":"select_subset(xpdb_s, ...)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/select_subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convenience wrapper for tidyselect — select_subset","text":"xpdb_s <xpose_set> xpose_set object ... <dynamic-dots> One tidyselect selectors","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/select_subset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convenience wrapper for tidyselect — select_subset","text":"<numeric> vector indices selected xpdb objects","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/select_subset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convenience wrapper for tidyselect — select_subset","text":"","code":"xpose.xtras:::select_subset(mod2, xpdb_s=xpdb_set) #> mod2  #>    2   xpose.xtras:::select_subset(dplyr::starts_with(\"fix\"), xpdb_s=xpdb_set) #> fix1 fix2  #>    3    4"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_base_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Base model for xpose_set — set_base_model","title":"Base model for xpose_set — set_base_model","text":"Base model xpose_set","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_base_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Base model for xpose_set — set_base_model","text":"","code":"set_base_model(xpdb_s, ...)  get_base_model(xpdb_s)  unset_base_model(xpdb_s)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_base_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Base model for xpose_set — set_base_model","text":"xpdb_s <xpose_set> object ... <<dynamic-dots> name base model","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_base_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Base model for xpose_set — set_base_model","text":"<xpose_set> object base model","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_base_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Base model for xpose_set — set_base_model","text":"","code":"w_base <- xpdb_set %>%   set_base_model(mod2) w_base # base model listed in output #>  #> ── xpose_set object ──────────────────────────────────────────────────────────── #> • Number of models: 4 #> • Model labels: mod1, mod2, fix1, and fix2 #> • Number of relationships: 3 #> • Focused xpdb objects: none #> • Exposed properties: none #> • Base model: mod2  get_base_model(w_base) # base model name #> [1] \"mod2\"  unset_base_model(w_base) # base model no longer in output #>  #> ── xpose_set object ──────────────────────────────────────────────────────────── #> • Number of models: 4 #> • Model labels: mod1, mod2, fix1, and fix2 #> • Number of relationships: 3 #> • Focused xpdb objects: none #> • Exposed properties: none #> • Base model: none"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_dv_probs.html","id":null,"dir":"Reference","previous_headings":"","what":"Set probability columns for categorical endpoints — set_dv_probs","title":"Set probability columns for categorical endpoints — set_dv_probs","text":"categorical DVs similar endpoints (censoring flag columns, like BLQ), function allows probability columns defined level.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_dv_probs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set probability columns for categorical endpoints — set_dv_probs","text":"","code":"set_dv_probs(   xpdb,   .problem = NULL,   ...,   .dv_var = NULL,   .handle_missing = c(\"quiet\", \"warn\", \"error\") )"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_dv_probs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set probability columns for categorical endpoints — set_dv_probs","text":"xpdb <xp_xtras> object .problem <numeric> Problem number use. Uses problems NULL ... Formulas LHS levels pseudo-functions (see Details), RHS columns probabilities levels. .dv_var <tidyselect> column categorical observation. Default first-listed catdv. .handle_missing <character> handle missing levels: \"quiet\", \"warn\", \"error\"","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_dv_probs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set probability columns for categorical endpoints — set_dv_probs","text":"<xp_xtras> object updated probabilities","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_dv_probs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set probability columns for categorical endpoints — set_dv_probs","text":"probability assigned multiple values. Pseudo-functions can used, new columns can created overcome limitation. available pseudo-functions written like ge(value) (>=), gt(value) (>), etc. comparison names used Perl, Fortran many languages. function eq() used, ignored either way; equivalence implied base syntax.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_dv_probs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set probability columns for categorical endpoints — set_dv_probs","text":"","code":"pkpd_m3 %>%  # Not necessary, but correct to set var type before using this  set_var_types(.problem=1, catdv=BLQ, dvprobs=LIKE) %>%  # Set var type. Warnings can be helpful unless an inverse likelihood column is available  set_dv_probs(.problem=1, 1~LIKE, .dv_var = BLQ, .handle_missing = \"warn\") %>%  list_vars() #> Warning: BLQ values are missing in probabilities: BLQ. If other probabilities don't add #> up 1, the inverse will apply to uncounted levels. #> Warning: This check does not consider qualifiers that may implicitly include uncounted #> levels (eg, `lt(1)`). #> List of available variables for problem no. 1 #>  - Subject identifier (id)               : ID #>  - Dependent variable (dv)               : DV #>  - Categorical endpoint (catdv)          : BLQ [0] #>  - DV Probabilities (dvprobs)            : LIKE [P(*.eq.1)] #>  - Independent variable (idv)            : TIME #>  - Dose amount (amt)                     : AMT #>  - Event identifier (evid)               : EVID #>  - Missing dependent variable (mdv)      : MDV #>  - Model typical predictions (pred)      : PRED #>  - Model individual predictions (ipred)  : IPRE #>  - Eta (eta)                             : ETA1, ETA2 #>  - Residuals (res)                       : NPDE, IWRES, CWRES, RES, WRES #>  - Not attributed (na)                   : DOSE, LLOQ, IRES, BASE, KDEG, IMAX, IC50, CL, VC, Q, VP, KA  # Same as above with demo of inverse column pkpd_m3 %>%  xpose::mutate(INVLIKE = 1-LIKE) %>%  set_var_types(.problem=1, catdv=BLQ, dvprobs=c(LIKE,INVLIKE)) %>%  # Note no warning  set_dv_probs(.problem=1, 1~LIKE, 0~INVLIKE, .dv_var = BLQ, .handle_missing = \"warn\")%>%  list_vars() #> List of available variables for problem no. 1 #>  - Subject identifier (id)               : ID #>  - Dependent variable (dv)               : DV #>  - Categorical endpoint (catdv)          : BLQ [0] #>  - DV Probabilities (dvprobs)            : LIKE [P(*.eq.1)], INVLIKE [P(*.eq.0)] #>  - Independent variable (idv)            : TIME #>  - Dose amount (amt)                     : AMT #>  - Event identifier (evid)               : EVID #>  - Missing dependent variable (mdv)      : MDV #>  - Model typical predictions (pred)      : PRED #>  - Model individual predictions (ipred)  : IPRE #>  - Eta (eta)                             : ETA1, ETA2 #>  - Residuals (res)                       : NPDE, IWRES, CWRES, RES, WRES #>  - Not attributed (na)                   : DOSE, LLOQ, IRES, BASE, KDEG, IMAX, IC50, CL, VC, Q, VP, KA  # With categorical model vismo_pomod  %>%  # Update var types  set_var_types(.problem=1, catdv=DV, dvprobs=matches(\"^P\\\\d+$\")) %>%  # Warning (as noted), does not recognize 3 is covered implicitly. That's ok!  set_dv_probs(.problem=1, 0~P0,1~P1,ge(2)~P23, .handle_missing = \"warn\")%>%  list_vars() #> Warning: DV values are missing in probabilities: DV. If other probabilities don't add up #> 1, the inverse will apply to uncounted levels. #> Warning: This check does not consider qualifiers that may implicitly include uncounted #> levels (eg, `lt(1)`). #> List of available variables for problem no. 1 #>  - Subject identifier (id)               : ID #>  - Categorical endpoint (catdv)          : DV [0] #>  - DV Probabilities (dvprobs)            : P0 [P(*.eq.0)], P1 [P(*.eq.1)], P23 [P(*.ge.2)] #>  - Independent variable (idv)            : TIME #>  - Dose amount (amt)                     : AMT #>  - Event identifier (evid)               : EVID #>  - Model typical predictions (pred)      : PRED #>  - Eta (eta)                             : ETA1 #>  - Residuals (res)                       : RES, WRES #>  - Not attributed (na)                   : STUDY, COHORT, PTNM, FRMU, BAAG, AGE, BWT, PTS, B1, B2, Y, U449E, CE  # Same as above, but... vismo_pomod  %>%  set_var_types(.problem=1, catdv=DV, dvprobs=matches(\"^P\\\\d+$\")) %>%  # Default is to not bother users with a warning  set_dv_probs(.problem=1, 0~P0,1~P1,ge(2)~P23)%>%  list_vars() #> List of available variables for problem no. 1 #>  - Subject identifier (id)               : ID #>  - Categorical endpoint (catdv)          : DV [0] #>  - DV Probabilities (dvprobs)            : P0 [P(*.eq.0)], P1 [P(*.eq.1)], P23 [P(*.ge.2)] #>  - Independent variable (idv)            : TIME #>  - Dose amount (amt)                     : AMT #>  - Event identifier (evid)               : EVID #>  - Model typical predictions (pred)      : PRED #>  - Eta (eta)                             : ETA1 #>  - Residuals (res)                       : RES, WRES #>  - Not attributed (na)                   : STUDY, COHORT, PTNM, FRMU, BAAG, AGE, BWT, PTS, B1, B2, Y, U449E, CE"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_option.html","id":null,"dir":"Reference","previous_headings":"","what":"Set an xpose option — set_option","title":"Set an xpose option — set_option","text":"Set xpose option","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_option.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set an xpose option — set_option","text":"","code":"set_option(xpdb, ...)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_option.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set an xpose option — set_option","text":"xpdb <xpose_dataxpose::xpose_data> object ... <dynamic-dots> Arguments form option = value","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_option.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set an xpose option — set_option","text":"xp_xtras object","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_option.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set an xpose option — set_option","text":"","code":"xpdb_x <- set_option(xpdb_x, quiet = TRUE)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a summary property — set_prop","title":"Set a summary property — set_prop","text":"Set summary property","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a summary property — set_prop","text":"","code":"set_prop(xpdb, ..., .problem = NULL, .subprob = NULL)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a summary property — set_prop","text":"xpdb <xpose_dataxpose::xpose_data> object ... <dynamic-dots> defining properties transform. Argument valid label. .problem <numeric> Problem number use. Uses problem provided. .subprob <numeric> Subproblem number use. Uses xpose default provided.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a summary property — set_prop","text":"xp_xtras object","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_prop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set a summary property — set_prop","text":"Although one might tempted set custom properties using function, intention maintain cross-functionality xpose, users set non-existent property function. used internally, workarounds semi-limitation used.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set a summary property — set_prop","text":"","code":"set_prop(xpose::xpdb_ex_pk, descr = \"New model description\") %>%   xpose::get_summary() #> # A tibble: 48 × 5 #>    problem subprob descr               label       value                         #>      <dbl>   <dbl> <chr>               <chr>       <chr>                         #>  1       0       0 Run description     descr       New model description         #>  2       0       0 Run directory       dir         data                          #>  3       0       0 Run errors          errors      na                            #>  4       0       0 ESAMPLE seed number esampleseed na                            #>  5       0       0 Run file            file        run001.lst                    #>  6       0       0 Number of ESAMPLE   nesample    na                            #>  7       0       0 Reference model     ref         000                           #>  8       0       0 Run number          run         run001                        #>  9       0       0 Software            software    nonmem                        #> 10       0       0 Run start time      timestart   Mon Oct 16 13:34:28 CEST 2017 #> # ℹ 38 more rows"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_var_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Set variable levels — set_var_levels","title":"Set variable levels — set_var_levels","text":"variable types catcov, can convenient define levels. function provides straightforward means , consistent tidy functions like <case_when>. Several convenience functions provided common levels <levelers>.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_var_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set variable levels — set_var_levels","text":"","code":"set_var_levels(   xpdb,   .problem = NULL,   ...,   .missing = \"Other\",   .handle_missing = c(\"quiet\", \"warn\", \"error\") )"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_var_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set variable levels — set_var_levels","text":"xpdb <xp_xtras> object .problem <numeric> Problem number use. Uses problems NULL ... <list> formulas leveler functions, relevant variable provided argument, .missing <character> Value use missing levels .handle_missing <character> handle missing levels: \"quiet\", \"warn\", \"error\"","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_var_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set variable levels — set_var_levels","text":"<xp_xtras> object updated levels","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_var_levels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set variable levels — set_var_levels","text":"","code":"set_var_levels(xpdb_x,   SEX = lvl_sex(),   MED1 = lvl_bin(),   MED2 = c(     0 ~ \"n\",     1 ~ \"y\"   ) ) #>  #> ── ~ xp_xtras object  #> Model description: NONMEM PK example for xpose #> run001.lst overview:  #>  - Software: nonmem 7.3.0  #>  - Attached files (memory usage 1.6 Mb):  #>    + obs tabs: $prob no.1: catab001.csv, cotab001, patab001, sdtab001  #>    + sim tabs: $prob no.2: simtab001.zip  #>    + output files: run001.cor, run001.cov, run001.ext, run001.grd, run001.phi, run001.shk  #>    + special: <none>  #>  - gg_theme: theme_readable  #>  - xp_theme: xp_xtra_theme new_x$xp_theme  #>  - Options: dir = data, quiet = FALSE, manual_import = NULL, cvtype = exact"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_var_types.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Set variable types — set_var_types.default","title":"Set variable types — set_var_types.default","text":"<set_var_types> wrapper accepts tidyselect syntax. Character vector-based selection still works. set_var_types_x accepts xpose_data xp_xtras objects. set_var_types without _x defined S3 methods. maintain xpose expectations, default method <set_var_types>, xp_xtras object used, method uses set_var_types_x.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_var_types.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set variable types — set_var_types.default","text":"","code":"# Default S3 method set_var_types(xpdb, .problem = NULL, ..., auto_factor = TRUE, quiet)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_var_types.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set variable types — set_var_types.default","text":"xpdb xpose_data object. .problem problem number edits applied. ... <dynamic-dots> Passed set_var_types processing. auto_factor TRUE new columns assigned type 'catcov' converted factor. quiet Logical, FALSE messages printed console.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_var_types.default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set variable types — set_var_types.default","text":"xpose_data object","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_var_types.default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set variable types — set_var_types.default","text":"","code":"data(\"xpdb_ex_pk\", package = \"xpose\")  # Change variable type xpdb_2 <- set_var_types_x(   xpdb_ex_pk, .problem = 1,   idv = TAD,   catcov = starts_with(\"MED\"),   contcov = c(CLCR,AGE)   )"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_var_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Set variable types — set_var_types","title":"Set variable types — set_var_types","text":"<set_var_types> wrapper accepts tidyselect syntax. Character vector-based selection still works. set_var_types_x accepts xpose_data xp_xtras objects. set_var_types without _x defined S3 methods. maintain xpose expectations, default method <set_var_types>, xp_xtras object used, method uses set_var_types_x.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_var_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set variable types — set_var_types","text":"","code":"set_var_types(xpdb, .problem = NULL, ..., auto_factor = TRUE, quiet)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_var_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set variable types — set_var_types","text":"xpdb xpose_data object. .problem problem number edits applied. ... <dynamic-dots> Passed set_var_types processing. auto_factor TRUE new columns assigned type 'catcov' converted factor. quiet Logical, FALSE messages printed console.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_var_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set variable types — set_var_types","text":"xpose_data object","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_var_types.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set variable types — set_var_types","text":"","code":"data(\"xpdb_ex_pk\", package = \"xpose\")  # Change variable type xpdb_2 <- set_var_types_x(   xpdb_ex_pk, .problem = 1,   idv = TAD,   catcov = starts_with(\"MED\"),   contcov = c(CLCR,AGE)   )"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_var_types.xp_xtra.html","id":null,"dir":"Reference","previous_headings":"","what":"Set variable types — set_var_types.xp_xtras","title":"Set variable types — set_var_types.xp_xtras","text":"<set_var_types> wrapper accepts tidyselect syntax. Character vector-based selection still works. set_var_types_x accepts xpose_data xp_xtras objects. set_var_types without _x defined S3 methods. maintain xpose expectations, default method <set_var_types>, xp_xtras object used, method uses set_var_types_x.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_var_types.xp_xtra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set variable types — set_var_types.xp_xtras","text":"","code":"# S3 method for class 'xp_xtras' set_var_types(xpdb, .problem = NULL, ..., auto_factor = TRUE, quiet)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_var_types.xp_xtra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set variable types — set_var_types.xp_xtras","text":"xpdb xpose_data object. .problem problem number edits applied. ... <dynamic-dots> Passed set_var_types processing. auto_factor TRUE new columns assigned type 'catcov' converted factor. quiet Logical, FALSE messages printed console.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_var_types.xp_xtra.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set variable types — set_var_types.xp_xtras","text":"xpose_data object","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_var_types.xp_xtra.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set variable types — set_var_types.xp_xtras","text":"","code":"data(\"xpdb_ex_pk\", package = \"xpose\")  # Change variable type xpdb_2 <- set_var_types_x(   xpdb_ex_pk, .problem = 1,   idv = TAD,   catcov = starts_with(\"MED\"),   contcov = c(CLCR,AGE)   )"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_var_types_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Set variable types — set_var_types_x","title":"Set variable types — set_var_types_x","text":"<set_var_types> wrapper accepts tidyselect syntax. Character vector-based selection still works. set_var_types_x accepts xpose_data xp_xtras objects. set_var_types without _x defined S3 methods. maintain xpose expectations, default method <set_var_types>, xp_xtras object used, method uses set_var_types_x.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_var_types_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set variable types — set_var_types_x","text":"","code":"set_var_types_x(xpdb, .problem = NULL, ..., auto_factor = TRUE, quiet)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_var_types_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set variable types — set_var_types_x","text":"xpdb xpose_data object. .problem problem number edits applied. ... <dynamic-dots> Passed set_var_types processing. auto_factor TRUE new columns assigned type 'catcov' converted factor. quiet Logical, FALSE messages printed console.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_var_types_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set variable types — set_var_types_x","text":"xpose_data object","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/set_var_types_x.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set variable types — set_var_types_x","text":"","code":"data(\"xpdb_ex_pk\", package = \"xpose\")  # Change variable type xpdb_2 <- set_var_types_x(   xpdb_ex_pk, .problem = 1,   idv = TAD,   catcov = starts_with(\"MED\"),   contcov = c(CLCR,AGE)   )"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/shark_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Change colors of shark plots — shark_colors","title":"Change colors of shark plots — shark_colors","text":"changes point text color xp_theme xpose_data object.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/shark_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change colors of shark plots — shark_colors","text":"","code":"shark_colors(   xpdb,   upcolor = xp_xtra_theme(base_on = xpdb$xp_theme)$sharkup_color,   dncolor = xp_xtra_theme(base_on = xpdb$xp_theme)$sharkdn_color )"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/shark_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change colors of shark plots — shark_colors","text":"xpdb <xpose_data> object upcolor Color increasing dOFV dncolor Color decreasing dOFV","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/shark_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change colors of shark plots — shark_colors","text":"<xpose_data> object","code":""},{"path":[]},{"path":"https://jprybylski.github.io/xpose.xtras/reference/shark_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change colors of shark plots — shark_colors","text":"","code":"if (FALSE) { # \\dontrun{  # Where this would fit in a particular workflow xpose_set(pheno_base, pheno_final) %>%   # forward functions affecting xpdb objects   focus_xpdb(everything()) %>%   # Add iOFVs   focus_function(backfill_iofv) %>%   # Change color of all xpdb xp_themes (though only the first one needs to change)   focus_function(   function(x) shark_colors(       x,       upcolor = \"purple\",       dncolor = \"green\"     )) %>%   # See new plot   shark_plot() } # }"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/shark_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Individual contributions to dOFV — shark_plot","title":"Individual contributions to dOFV — shark_plot","text":"intended match overall behavior dOFV.vs.id() xpose4, within framework xpose_set object. dofv_vs_id alias function shark_plot, recognition.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/shark_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Individual contributions to dOFV — shark_plot","text":"","code":"shark_plot(   xpdb_s,   ...,   .inorder = FALSE,   type = \"plt\",   alpha = 0.05,   df = \"guess\",   text_cutoff = 0.8,   title = \"Individual contributions to dOFV | @run\",   subtitle = \"Based on @nind individuals, OFVs: @ofv\",   caption = \"@dir\",   tag = NULL,   ylab = \"dOFV\",   xlab = \"Number of individuals removed\",   opt,   facets = NULL,   .problem,   .subprob,   .method,   quiet )  dofv_vs_id(   xpdb_s,   ...,   .inorder = FALSE,   type = \"plt\",   alpha = 0.05,   df = \"guess\",   text_cutoff = 0.8,   title = \"Individual contributions to dOFV | @run\",   subtitle = \"Based on @nind individuals, OFVs: @ofv\",   caption = \"@dir\",   tag = NULL,   ylab = \"dOFV\",   xlab = \"Number of individuals removed\",   opt,   facets = NULL,   .problem,   .subprob,   .method,   quiet )"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/shark_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Individual contributions to dOFV — shark_plot","text":"xpdb_s <xpose_set> object ... See <two_set_dots> .inorder See <two_set_dots> type See Details. alpha alpha LRT df degrees freedom LRT. \"guess\" (default), use difference number unfixed parameters. text_cutoff less 1, percentile absolute individual dOFV values show labels IDs. 1, absolute number IDs show. show , use extreme positive number like 9999. title Plot title subtitle Plot subtitle caption Plot caption tag Plot tag ylab y-axis label xlab x-axis label opt User-specified data options. used. facets <character> vector selecting facets, NULL (default). .problem problem used, default returns last one. .subprob subproblem used, default returns last one. .method estimation method used, default returns last one. quiet Silence extra debugging output","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/shark_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Individual contributions to dOFV — shark_plot","text":"<xpose_plot> object","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/shark_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Individual contributions to dOFV — shark_plot","text":"type-based customization plots: p points (using aesthetics sharkup sharkdn) l lines dOFV (total dOFV significance plotted) t text (using aesthetics shkuptxt shkdntxt) xpose4, users can control sig.drop, function uses alpha df determine critical delta likelihood ratio test. acknowledged situations may valid, suggested df alpha adjusted meet desired sig.drop.","code":"my_alpha <- 0.05 my_df <- 1.34 # fractional, perhaps to account for different IIVs  my_sigdrop <- -stats::qchisq(1-my_alpha, my_df) my_sigdrop #> [1] -4.633671 # Then use alpha=my_alpha, df=my_df in `shark_plot` call."},{"path":[]},{"path":"https://jprybylski.github.io/xpose.xtras/reference/shark_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Individual contributions to dOFV — shark_plot","text":"","code":"if (FALSE) { # \\dontrun{  pheno_set %>%   # Make sure set has iofv var types defined   focus_xpdb(everything()) %>%   focus_function(backfill_iofv) %>%   # Pick two models or consistent with two_set_dots()   shark_plot(run6,run11)  pheno_set %>%   # As before   focus_xpdb(everything()) %>%   focus_function(backfill_iofv) %>%   # Add indicator (or use established covariate)   mutate(APGRtest = as.numeric(as.character(APGR))<5) %>%   # Pick two models or consistent with two_set_dots()   shark_plot(run6,run11, facets = \"APGRtest\")  } # }"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/summarise_xpdb.html","id":null,"dir":"Reference","previous_headings":"","what":"Group/ungroup and summarize variables in an xpdb — summarise_xpdb","title":"Group/ungroup and summarize variables in an xpdb — summarise_xpdb","text":"group_by_x() takes existing table converts grouped table operations performed \"group\". ungroup() removes grouping. summarize() reduces multiple values single value. Note: function uses xpose.xtras::edit_xpose_data, otherwise <xpose::group_by>.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/summarise_xpdb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group/ungroup and summarize variables in an xpdb — summarise_xpdb","text":"","code":"group_by_x(.data, ..., .problem, .source, .where)  ungroup_x(.data, ..., .problem, .source, .where)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/summarise_xpdb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group/ungroup and summarize variables in an xpdb — summarise_xpdb","text":".data xpose database object. ... Name-value pairs expressions. Use NULL drop variable. .problem problem data modified .source source data xpdb. Can either 'data' output file extension e.g. 'phi'. .vector element names edited special (e.g. .= c('vpc_dat', 'aggr_obs') vpc).","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/two_set_dots.html","id":null,"dir":"Reference","previous_headings":"","what":"Typical processing for plots of 2 sets — two_set_dots","title":"Typical processing for plots of 2 sets — two_set_dots","text":"Typical processing plots 2 sets","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/two_set_dots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Typical processing for plots of 2 sets — two_set_dots","text":"","code":"two_set_dots(xpdb_s, ..., .inorder = FALSE, envir = parent.frame())"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/two_set_dots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Typical processing for plots of 2 sets — two_set_dots","text":"xpdb_s <xpose_set> object ... <dynamic-dots> Passed <select_subset> .inorder <logical> Regardless base model parentage, use two plots order arguments. First plot listed treated base parent. envir assign mod1 mod2 <xpose_set_item>s","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/two_set_dots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Typical processing for plots of 2 sets — two_set_dots","text":"environment specified envir, <xpose_set_item> mod1 mod2","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/two_set_dots.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Typical processing for plots of 2 sets — two_set_dots","text":"Note function return valid xpdb-like objects (<xpose_data> <xp_xtras>). necessary objects functions can retrieved using mod1$xpdb mod2$xpdb.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/val2lvl.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate values to levels — val2lvl","title":"Translate values to levels — val2lvl","text":"intended used convenience function plotting levels set variable.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/val2lvl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate values to levels — val2lvl","text":"","code":"val2lvl(vals, lvl_tbl = NULL)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/val2lvl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate values to levels — val2lvl","text":"vals vector values associated levels lvl_tbl lvl_tbl tibble levels","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/vismo_dtmm.html","id":null,"dir":"Reference","previous_headings":"","what":"An xp_xtras example of the discrete-time Markov model of categorical vismodegib data — vismo_dtmm","title":"An xp_xtras example of the discrete-time Markov model of categorical vismodegib data — vismo_dtmm","text":"referenced work presents two alternative modeling approaches muscle spasm response vismodegib. fit provided discrete-time Markov model 50 participant mock data.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/vismo_dtmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An xp_xtras example of the discrete-time Markov model of categorical vismodegib data — vismo_dtmm","text":"","code":"vismo_dtmm"},{"path":[]},{"path":"https://jprybylski.github.io/xpose.xtras/reference/vismo_dtmm.html","id":"xp-xtras","dir":"Reference","previous_headings":"","what":"xp_xtras","title":"An xp_xtras example of the discrete-time Markov model of categorical vismodegib data — vismo_dtmm","text":"xp_xtras object.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/vismo_dtmm.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"An xp_xtras example of the discrete-time Markov model of categorical vismodegib data — vismo_dtmm","text":"Derived sup-0009 sup-0010 reference.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/vismo_dtmm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"An xp_xtras example of the discrete-time Markov model of categorical vismodegib data — vismo_dtmm","text":"Lu, T., Yang, Y., Jin, J.Y. Kågedal, M. (2020), Analysis Longitudinal-Ordered Categorical Data Muscle Spasm Adverse Event Vismodegib: Comparison Different Pharmacometric Models. CPT Pharmacometrics Syst. Pharmacol., 9: 96-105. https://doi.org/10.1002/psp4.12487","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/vismo_pomod.html","id":null,"dir":"Reference","previous_headings":"","what":"An xp_xtras example of the proportional odds categorical vismodegib model — vismo_pomod","title":"An xp_xtras example of the proportional odds categorical vismodegib model — vismo_pomod","text":"referenced work presents two alternative modeling approaches muscle spasm response vismodegib. fit provided proportional odds model 50 participant mock data.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/vismo_pomod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An xp_xtras example of the proportional odds categorical vismodegib model — vismo_pomod","text":"","code":"vismo_pomod"},{"path":[]},{"path":"https://jprybylski.github.io/xpose.xtras/reference/vismo_pomod.html","id":"xp-xtras","dir":"Reference","previous_headings":"","what":"xp_xtras","title":"An xp_xtras example of the proportional odds categorical vismodegib model — vismo_pomod","text":"xp_xtras object.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/vismo_pomod.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"An xp_xtras example of the proportional odds categorical vismodegib model — vismo_pomod","text":"Derived sup-0009 sup-0010 reference.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/vismo_pomod.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"An xp_xtras example of the proportional odds categorical vismodegib model — vismo_pomod","text":"Lu, T., Yang, Y., Jin, J.Y. Kågedal, M. (2020), Analysis Longitudinal-Ordered Categorical Data Muscle Spasm Adverse Event Vismodegib: Comparison Different Pharmacometric Models. CPT Pharmacometrics Syst. Pharmacol., 9: 96-105. https://doi.org/10.1002/psp4.12487","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/vismodegib.html","id":null,"dir":"Reference","previous_headings":"","what":"A tibble of mock data used for fitting vismodegib models — vismodegib","title":"A tibble of mock data used for fitting vismodegib models — vismodegib","text":"referenced work presents two alternative modeling approaches muscle spasm response vismodegib. mock dataset one person, using provided model 50 participant mock dataset generated.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/vismodegib.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A tibble of mock data used for fitting vismodegib models — vismodegib","text":"","code":"vismodegib"},{"path":[]},{"path":"https://jprybylski.github.io/xpose.xtras/reference/vismodegib.html","id":"tibble","dir":"Reference","previous_headings":"","what":"tibble","title":"A tibble of mock data used for fitting vismodegib models — vismodegib","text":"tibble.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/vismodegib.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A tibble of mock data used for fitting vismodegib models — vismodegib","text":"Generated using sup-0009 sup-0010 reference.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/vismodegib.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A tibble of mock data used for fitting vismodegib models — vismodegib","text":"Lu, T., Yang, Y., Jin, J.Y. Kågedal, M. (2020), Analysis Longitudinal-Ordered Categorical Data Muscle Spasm Adverse Event Vismodegib: Comparison Different Pharmacometric Models. CPT Pharmacometrics Syst. Pharmacol., 9: 96-105. https://doi.org/10.1002/psp4.12487","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/waterfalls.html","id":null,"dir":"Reference","previous_headings":"","what":"Specific waterfall plots — prm_waterfall","title":"Specific waterfall plots — prm_waterfall","text":"Differences second listed model minus first listed. Eg, eta_waterfall(run1,run2), etas run2 greater run1, difference positive.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/waterfalls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specific waterfall plots — prm_waterfall","text":"","code":"prm_waterfall(   xpdb_s,   ...,   .inorder = FALSE,   type = \"bh\",   max_nind = 0.7,   scale_diff = TRUE,   show_n = TRUE,   title = \"Parameter changes between models | @run\",   subtitle = \"Based on @nobs observations in @nind individuals\",   caption = \"@dir\",   tag = NULL,   facets = NULL,   facet_scales = \"free_x\",   .problem,   .subprob,   .method,   quiet )  eta_waterfall(   xpdb_s,   ...,   .inorder = FALSE,   type = \"bh\",   max_nind = 0.7,   scale_diff = TRUE,   show_n = TRUE,   title = \"Eta changes between models | @run\",   subtitle = \"Based on @nobs observations in @nind individuals\",   caption = \"@dir\",   tag = NULL,   facets = NULL,   facet_scales = \"free_x\",   .problem,   .subprob,   .method,   quiet )  iofv_waterfall(   xpdb_s,   ...,   .inorder = FALSE,   type = \"bh\",   max_nind = 0.7,   scale_diff = FALSE,   show_n = TRUE,   title = \"iOFV changes between models | @run\",   subtitle = \"Based on @nobs observations in @nind individuals\",   caption = \"@dir\",   tag = NULL,   facets = NULL,   facet_scales = \"free_x\",   .problem,   .subprob,   .method,   quiet )"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/waterfalls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specific waterfall plots — prm_waterfall","text":"xpdb_s <xpose_set> object ... See <two_set_dots> .inorder See <two_set_dots> type See Details. max_nind less 1, percentile absolute change values plot. 1, absolute number subjects included. show , use extreme positive number like 9999. scale_diff <logical> Scale change standard deviation model 1 column values. Respects faceting. show_n <logical> faceting variables, show N per facet. implemented title Plot title subtitle Plot subtitle caption Plot caption tag Plot tag facets <character> Faceting variables facet_scales <character> Forwarded facet_*(scales = facet_scales) .problem problem used, default returns last one. .subprob subproblem used, default returns last one. .method estimation method used, default returns last one. quiet Silence extra debugging output","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/waterfalls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specific waterfall plots — prm_waterfall","text":"<xpose_plot> object","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/waterfalls.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specific waterfall plots — prm_waterfall","text":"type-based customization plots: b bar plot (geom_bar) h hline 0 (geom_hline) t text change value (geom_text)","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/waterfalls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specific waterfall plots — prm_waterfall","text":"","code":"# Parameter value changes pheno_set %>%   # Ensure param is set   focus_qapply(set_var_types, param=c(CL,V)) %>%   prm_waterfall(run5,run6) #> Using data from $prob no.1 #> Removing duplicated rows based on: ID #> Tidying data by ID, TIME, AMT, WT, APGR ... and 16 more variables    # EBE value changes pheno_set %>%   eta_waterfall(run5,run6) #> Using data from $prob no.1 #> Removing duplicated rows based on: ID #> Tidying data by ID, TIME, AMT, WT, APGR ... and 16 more variables   # iOFV changes pheno_set %>%   focus_qapply(backfill_iofv) %>%   # Note the default scaling is flipped here   iofv_waterfall(run5,run6) #> Using data from $prob no.1 #> Removing duplicated rows based on: ID #> Tidying data by ID, TIME, AMT, WT, APGR ... and 17 more variables"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/wrap_xp_ggally.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure consistent style with GGally functions — wrap_xp_ggally","title":"Ensure consistent style with GGally functions — wrap_xp_ggally","text":"Ensure consistent style GGally functions","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/wrap_xp_ggally.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure consistent style with GGally functions — wrap_xp_ggally","text":"","code":"wrap_xp_ggally(fn, xp_theme, ...)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/wrap_xp_ggally.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure consistent style with GGally functions — wrap_xp_ggally","text":"fn <character> name GGally function xp_theme theme use ... <> additional arguments pass GGally function","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/wrap_xp_ggally.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure consistent style with GGally functions — wrap_xp_ggally","text":"ggplot2 function","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xp4_xtra_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Updated version of the xpose4 theme — xp4_xtra_theme","title":"Updated version of the xpose4 theme — xp4_xtra_theme","text":"Updated version xpose4 theme","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xp4_xtra_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Updated version of the xpose4 theme — xp4_xtra_theme","text":"","code":"xp4_xtra_theme()"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xp_var.html","id":null,"dir":"Reference","previous_headings":"","what":"xp_var Method — xp_var","title":"xp_var Method — xp_var","text":"add small amount functionality <xp_var>, method created.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xp_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xp_var Method — xp_var","text":"","code":"xp_var(xpdb, .problem, col = NULL, type = NULL, silent = FALSE)  # Default S3 method xp_var(xpdb, .problem, col = NULL, type = NULL, silent = FALSE)  # S3 method for class 'xp_xtras' xp_var(xpdb, .problem, col = NULL, type = NULL, silent = FALSE)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xp_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xp_var Method — xp_var","text":"xpdb xpose database object. .problem $problem number used. col column name searched index. Alternative arg `type`. type type column searched index. Alternative `col`. silent function silent return errors.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xp_xtra_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Extra theme defaults — xp_xtra_theme","title":"Extra theme defaults — xp_xtra_theme","text":"Adds aesthetics plot components used package.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xp_xtra_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extra theme defaults — xp_xtra_theme","text":"","code":"xp_xtra_theme(base_on = NULL)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xp_xtra_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extra theme defaults — xp_xtra_theme","text":"base_on xp_theme object extend","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xp_xtra_theme.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extra theme defaults — xp_xtra_theme","text":"package attempts generate consistent theme even users working highly customized xp_theme. hard-coded aesthetics, rest derived existing aesthetics base_on, defaults default xpose. options worth noting. <xplot_pairs> (functions using ), aesthetics GGally-specific elements like barDiag defined gga(element)_(aesthetic). labeller pairs plots also changed de facto default label_both label_value, labeller can provided pairs_labeller.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xp_xtras.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object to an xpose_data and xp_xtras object — as_xpdb_x","title":"Convert an object to an xpose_data and xp_xtras object — as_xpdb_x","text":"function masks default xpose package, adding xp_xtras class default xpose_data objects.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xp_xtras.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object to an xpose_data and xp_xtras object — as_xpdb_x","text":"","code":"as_xpdb_x(x)  as_xp_xtras(x)  check_xpdb_x(x, .warn = TRUE)  check_xp_xtras(...)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xp_xtras.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object to an xpose_data and xp_xtras object — as_xpdb_x","text":"x Suspected xp_xtras object .warn <logical> Whether warn xpose_data xp_xtras ... Forwarded","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xp_xtras.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an object to an xpose_data and xp_xtras object — as_xpdb_x","text":"<xpose_data> <xp_xtras> object","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xp_xtras.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an object to an xpose_data and xp_xtras object — as_xpdb_x","text":"","code":"xp_x <- as_xpdb_x(xpose::xpdb_ex_pk) check_xpdb_x(xp_x) #> [1] TRUE"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xpdb_set.html","id":null,"dir":"Reference","previous_headings":"","what":"An example xpose_set object — xpdb_set","title":"An example xpose_set object — xpdb_set","text":"set identical xpdb objects demo various features xpose.xtras.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xpdb_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An example xpose_set object — xpdb_set","text":"","code":"xpdb_set"},{"path":[]},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xpdb_set.html","id":"xpose-set","dir":"Reference","previous_headings":"","what":"xpose_set","title":"An example xpose_set object — xpdb_set","text":"xpose_set object length 4 single lineage.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xpdb_set.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"An example xpose_set object — xpdb_set","text":"Assembled xpdb_ex_pk object xpose package.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xpdb_x.html","id":null,"dir":"Reference","previous_headings":"","what":"An example xp_xtras object — xpdb_x","title":"An example xp_xtras object — xpdb_x","text":"<xpdb_ex_pk> object converted xp_xtras. examples.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xpdb_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An example xp_xtras object — xpdb_x","text":"","code":"xpdb_x"},{"path":[]},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xpdb_x.html","id":"xp-xtras","dir":"Reference","previous_headings":"","what":"xp_xtras","title":"An example xp_xtras object — xpdb_x","text":"xp_xtras object extra data filled.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xpdb_x.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"An example xp_xtras object — xpdb_x","text":"Assembled xpdb_ex_pk object xpose package.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xplot_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Default xpose boxplot function — xplot_boxplot","title":"Default xpose boxplot function — xplot_boxplot","text":"Manually generate boxplots xpdb object.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xplot_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default xpose boxplot function — xplot_boxplot","text":"","code":"xplot_boxplot(   xpdb,   mapping = NULL,   type = \"bo\",   xscale = \"discrete\",   yscale = \"continuous\",   orientation = \"x\",   group = \"ID\",   title = NULL,   subtitle = NULL,   caption = NULL,   tag = NULL,   plot_name = \"boxplot\",   gg_theme,   xp_theme,   opt,   quiet,   jitter_seed,   ... )"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xplot_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default xpose boxplot function — xplot_boxplot","text":"xpdb <xp_xtras> <xpose_data> object mapping ggplot2 style mapping type See Details. xscale Defaults discrete. yscale Defaults continuous, used check orientation changed. orientation Defaults x group Grouping connecting lines jitter title Plot title subtitle Plot subtitle caption Plot caption tag Plot tag plot_name Metadata name plot gg_theme xpose xp_theme xpose opt Processing options fetched data quiet Silence extra debugging output jitter_seed numeric, optional seed used jitters ... additional aesthetics.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xplot_boxplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Default xpose boxplot function — xplot_boxplot","text":"type-based customization plots: b box-whisker (using default quantiles) p points (geom_dotplot) v violin (geom_violin) o outliers (show outliers) l line 0 (indicated hline_yintercept yline_xintercept) s smooth line (geom_smooth) j jitter points (geom_jitter) c connecting lines jitter points  (geom_path)","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xplot_pairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper around ggpairs — xplot_pairs","title":"Wrapper around ggpairs — xplot_pairs","text":"Following xpose design pattern derive <ggpairs> plots. Established xplot_ used generate parts grid.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xplot_pairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper around ggpairs — xplot_pairs","text":"","code":"xplot_pairs(   xpdb,   mapping = NULL,   cont_opts = list(group = \"ID\", guide = FALSE, type = \"ps\"),   dist_opts = list(guide = FALSE, type = \"hr\"),   cat_opts = list(type = \"bo\", log = NULL),   contcont_opts = list(other_fun = NULL, stars = FALSE, digits = reportable_digits(xpdb),     title = \"Pearson Corr\"),   catcont_opts = list(other_fun = NULL, stars = FALSE, digits = reportable_digits(xpdb),     title = \"Spearman rho\"),   catcat_opts = list(use_rho = TRUE),   title = NULL,   subtitle = NULL,   caption = NULL,   tag = NULL,   plot_name = \"pairs\",   gg_theme,   xp_theme,   opt,   quiet,   progress = rlang::is_interactive() && quiet,   switch = NULL,   ... )"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xplot_pairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper around ggpairs — xplot_pairs","text":"xpdb <xp_xtras>  <xpose_data`> object mapping ggplot2 style mapping cont_opts List options pass xplot_scatter. See Details dist_opts List options pass xplot_distribution. See Details cat_opts List options pass xplot_boxplot. See Details contcont_opts List options pass ggally_cors. See Details catcont_opts List options pass ggally_statistic. See Details catcat_opts list use_rho TRUE FALSE. TRUE (default), Spearman rho displayed, else ggpairs default count used. title Plot title subtitle Plot subtitle caption Plot caption tag Plot tag plot_name Metadata name plot gg_theme xpose. work reliably changed default. xp_theme xpose opt Processing options fetched data quiet Silence extra debugging output progress Show progress bar plot generated? switch Passed ggpairs ... Ignored","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xplot_pairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper around ggpairs — xplot_pairs","text":"specified pair plot","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xplot_pairs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrapper around ggpairs — xplot_pairs","text":"limited control underlying ggpairs() call given need address abstractions GGally xpose. However, users can modify  key display features. scatter, distribution boxplots, type option directly forwarded user. upper elements matrix, users can modify features text displayed supply function entirely (other_fun). _opts lists consumed <modifyList> default, need declare preferences align default updating subset.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xpose.xtras-package.html","id":null,"dir":"Reference","previous_headings":"","what":"xpose.xtras: Extra Functionality for the Xpose Package — xpose.xtras-package","title":"xpose.xtras: Extra Functionality for the Xpose Package — xpose.xtras-package","text":"Adding -present missing functionality, functions unlikely added base xpose package.","code":""},{"path":[]},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xpose.xtras-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"xpose.xtras: Extra Functionality for the Xpose Package — xpose.xtras-package","text":"Maintainer: John Prybylski john.prybylski@pfizer.com (ORCID)","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xpose_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a set of xpdb objects — xpose_set","title":"Generate a set of xpdb objects — xpose_set","text":"function generates set xpose data (xpdb) objects can used define relationships models. ","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xpose_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a set of xpdb objects — xpose_set","text":"","code":"xpose_set(..., .relationships = NULL, .as_ordered = FALSE)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xpose_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a set of xpdb objects — xpose_set","text":"... <dynamic-dots> xpdb1, xpdb2, ... set xpdb objects combined set. .relationships <list> list relationships xpdb objects. (see Details) .as_ordered <logical> Alternative .relationships, set xpdb objects provided considered lineage (grandparent, parent, child, ...)?","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xpose_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a set of xpdb objects — xpose_set","text":"list class xpose_set","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xpose_set.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a set of xpdb objects — xpose_set","text":"Beyond just list xpdb objects, xpose_set adds hierarchical information. using .relationships, expressed tilde formulas, left-hand side children right side parents. simplest case, child ~ parent, child can multiple parents. syntax expects names models either declared argument names call, variable names directly used (.e., spliced passed unnamed list).","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xpose_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a set of xpdb objects — xpose_set","text":"","code":"data(\"xpdb_ex_pk\", package = \"xpose\")  # Arbitrary copy xpdb_ex_pk2 <- xpdb_ex_pk  # Simplest call set1 <- xpose_set(xpdb_ex_pk, xpdb_ex_pk2)  # With predefined relationships set2 <- xpose_set(xpdb_ex_pk, xpdb_ex_pk2,   .relationships = list(xpdb_ex_pk2 ~ xpdb_ex_pk)   )  # Alternative predefined relationships set2b <- xpose_set(xpdb_ex_pk, xpdb_ex_pk2,   .as_ordered = TRUE   )  # With custom labels set3 <- xpose_set(mod1 = xpdb_ex_pk, mod2 = xpdb_ex_pk2,   .relationships = list(mod2 ~ mod1)   )  # Alternative set3 using dyanmic dots mod_list <- list(   mod1 = xpdb_ex_pk,   mod2 = xpdb_ex_pk2 ) mod_rels <- list(   mod2 ~ mod1 ) set3b = xpose_set(!!!mod_list, .relationships = mod_rels)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xset_lineage.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine lineage within a set — xset_lineage","title":"Determine lineage within a set — xset_lineage","text":"Determine lineage within set","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xset_lineage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine lineage within a set — xset_lineage","text":"","code":"xset_lineage(xpdb_s, ..., .spinner = NULL)"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xset_lineage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine lineage within a set — xset_lineage","text":"xpdb_s <xpose_set> object ... <dynamic-dots> labels models set create lineages (result list multiple labels used). empty, lineage base model output; base, first listed model used. Always used senior model list. .spinner Set FALSE show loading spinner interactive mode.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xset_lineage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine lineage within a set — xset_lineage","text":"<character> vector c('base', 'base child', 'base grandchild', ...) list thereof, depending dots arguments.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xset_lineage.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Determine lineage within a set — xset_lineage","text":"function uses -especially-optimized tree-searching algorithm determine longest lineage starting whatever treated base model. based loosely <pluck_depth>, values depth maintained. , larger sets function , importantly, functions use may take time.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xset_lineage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine lineage within a set — xset_lineage","text":"","code":"if (FALSE) { # \\dontrun{  xset_lineage(xpdb_set)  set_base_model(xpdb_set, fix1) %>%   xset_lineage()  xset_lineage(xpdb_set, fix1)  } # }"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xset_waterfall.html","id":null,"dir":"Reference","previous_headings":"","what":"Waterfall plot — xset_waterfall","title":"Waterfall plot — xset_waterfall","text":"Generic function primarily used wrappers targeting types values changed two models.","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xset_waterfall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Waterfall plot — xset_waterfall","text":"","code":"xset_waterfall(   xpdb_s,   ...,   .inorder = FALSE,   type = \"bh\",   .cols = NULL,   max_nind = 0.7,   scale_diff = TRUE,   show_n = TRUE,   title = NULL,   subtitle = NULL,   caption = NULL,   tag = NULL,   plot_name = \"waterfall\",   opt,   facets = NULL,   facet_scales = \"free_x\",   .problem,   .subprob,   .method,   quiet )"},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xset_waterfall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Waterfall plot — xset_waterfall","text":"xpdb_s <xpose_set> object ... See <two_set_dots> .inorder See <two_set_dots> type See Details. .cols <tidyselect> data columns plot. max_nind less 1, percentile absolute change values plot. 1, absolute number subjects included. show , use extreme positive number like 9999. scale_diff <logical> Scale change standard deviation model 1 column values. Respects faceting. show_n <logical> faceting variables, show N per facet. implemented title Plot title subtitle Plot subtitle caption Plot caption tag Plot tag plot_name Metadata name plot opt User-specified data options. used. facets <character> Faceting variables facet_scales <character> Forwarded facet_*(scales = facet_scales) .problem problem used, default returns last one. .subprob subproblem used, default returns last one. .method estimation method used, default returns last one. quiet Silence extra debugging output","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/reference/xset_waterfall.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Waterfall plot — xset_waterfall","text":"type-based customization plots: b bar plot (geom_bar) h hline 0 (geom_hline) t text change value (geom_text)","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/news/index.html","id":"xposextras-002","dir":"Changelog","previous_headings":"","what":"xpose.xtras 0.0.2","title":"xpose.xtras 0.0.2","text":"CRAN release planned","code":""},{"path":"https://jprybylski.github.io/xpose.xtras/news/index.html","id":"xposextras-001","dir":"Changelog","previous_headings":"","what":"xpose.xtras 0.0.1","title":"xpose.xtras 0.0.1","text":"Early post-development version Completed unit tests ongoing fixes bugs documentation.","code":""}]
